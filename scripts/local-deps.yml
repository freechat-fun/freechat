services:
  mysql:
    image: mysql:${MYSQL_TAG}
    ports: 
      - ${MYSQL_HOST_PORT}:${MYSQL_PORT}
    container_name: ${MYSQL_NAME}
    volumes:
      - ${MYSQL_VOLUME}/conf.d:/etc/mysql/conf.d
      - ${MYSQL_VOLUME}/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ${MYSQL_VOLUME}/data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "--silent" ]
      interval: 10s
      timeout: 20s
      retries: 3

  redis:
    image: redis:${REDIS_TAG}
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "hello1234"]
    ports:
      - ${REDIS_HOST_PORT}:${REDIS_PORT}
    container_name: ${REDIS_NAME}
    volumes:
      - ${REDIS_VOLUME}:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 20s
      retries: 3

  etcd:
    container_name: ${ETCD_NAME}
    image: quay.io/coreos/etcd:${ETCD_TAG}
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    ports:
      - ${MINIO_HOST_PORT}:${MINIO_PORT}
    volumes:
      - ${ETCD_VOLUME}:/etcd
    command: [ "etcd", "-advertise-client-urls=http://127.0.0.1:2379", "-listen-client-urls=http://0.0.0.0:2379", "--data-dir=/etcd" ]
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: ${MINIO_NAME}
    image: minio/minio:${MINIO_TAG}
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - ${MINIO_HOST_PORT}:${MINIO_PORT}
      - ${MINIO_CONTROL_HOST_PORT}:${MINIO_CONTROL_PORT}
    volumes:
      - ${MINIO_VOLUME}:/minio_data
    command: [ "minio", "server", "/minio_data", "--console-address", ":${MINIO_CONTROL_PORT}" ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    image: milvusdb/milvus:${MILVUS_TAG}
    ports:
      - ${MILVUS_HOST_PORT}:${MILVUS_PORT}
      - ${MILVUS_CONTROL_HOST_PORT}:${MILVUS_CONTROL_PORT}
    container_name: ${MILVUS_NAME}
    volumes:
      - ${MILVUS_VOLUME}:/var/lib/milvus
    environment:
      - COMMON_STORAGETYPE=local
      - ETCD_ENDPOINTS=etcd:2379
    entrypoint: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:${MILVUS_CONTROL_PORT}/healthz" ]
      interval: 10s
      timeout: 20s
      retries: 6

  tts:
    image: freechatfun/freechat-tts:${TTS_TAG}
    platform: linux/amd64
    ports:
      - ${TTS_HOST_PORT}:${TTS_PORT}
    container_name: ${TTS_NAME}
    volumes:
      - ${TTS_VOLUME}:/var/lib/tts
    environment:
      - DATA_HOME=/var/lib/tts
      - PYTHONPATH=/root
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:${TTS_PORT}/ping"]
      interval: 10s
      timeout: 20s
      retries: 12
