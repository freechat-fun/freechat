global:
  redis:
    password: ''
  storageClass: 'default'
auth:
  aes:
    key: ''
  oauth2:
    aliyun:
      enable: true
      authorizationGrantType: authorization_code
      clientAuthenticationMethod: client_secret_basic
      clientName: Aliyun
      scope: openid
      clientId: ''
      clientSecret: ''
    github:
      enable: true
      scope: ''
      clientId: ''
      clientSecret: ''
    google:
      enable: true
      scope: openid,profile,email
      clientId: ''
      clientSecret: ''
autoscaling:
  enabled: false
bitnami:
  mysql:
    enabled: true
  redis:
    enabled: true
cert:
  manager:
    namespace: cert-manager
    version: v1.11.0
  issuer:
    enabled: true
  certificate:
    enabled: true
  email: dev.freechat.fun@gmail.com
debug:
  jpda:
    enabled: false
    port: 5005
deployment:
  backend:
    enabled: true
  frontend:
    enabled: false
  pvc:
    enabled: false
    accessModes: [ReadWriteOnce]
    storage: 120Gi
image:
  backend:
    pullPolicy: Always
    repository: freechatfun/freechat
    tag: 'latest'
  frontend:
    pullPolicy: Always
    repository: freechatfun/freechat-web
    tag: 'latest'
ingress:
  enabled: true
  className: nginx
  hosts:
    - host: freechat.fun
      backend:
        paths:
          - path: /
            pathType: Prefix
      frontend:
        paths:
          - path: /assets
            pathType: Prefix
  tls:
    enabled: true
mysql:
  url: jdbc:mysql://freechat-mysql:3306/freechat?useUnicode=true&characterEncoding=utf-8
  auth:
    database: freechat
    password: ''
    rootPassword: ''
    username: freechat
redis:
  url: redis://freechat-redis-master:6379
  replica:
    replicaCount: 0
replicaCount: 2
resources:
  limits: {}
  requests: {}
podSecurityContext:
  fsGroup: 2023
securityContext:
  runAsUser: 2023
  runAsGroup: 2023
service:
  ports:
    http: 80
  type: ClusterIP
serviceAccount:
  create: true
systemAccount: admin
spring: {}
