{{- if .Values.deployment.backend.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helpers.fullname" . }}-main
  labels:
    {{- include "helpers.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helpers.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helpers.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helpers.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: dependencies-listener
          image: '{{ .Values.image.busybox.repository | default "busybox" }}:{{ .Values.image.busybox.tag | default "latest" }}'
          imagePullPolicy: {{ .Values.image.busybox.pullPolicy | default "IfNotPresent" }}
          command:
            - sh
            - -ec
            - |
              for i in $(seq 1 200); do
                nc -z -v -w3 {{ include "helpers.extractHostPort" .Values.mysql.url }} && \
                nc -z -v -w3 {{ include "helpers.extractHostPort" .Values.redis.url }} && \
                nc -z -v -w3 {{ include "helpers.extractHostPort" .Values.milvus.url }} && \
                sleep 30 && exit 0 || sleep 3
              done
              exit 1
      containers:
        - name: main
          env:
            - name: SERVICE_OPTS
              value: '-Dspring.config.location=classpath:/application.yml,/home/{{ .Values.systemAccount }}/{{ include "helpers.name" . }}/config/application-private.yml -Dspring.profiles.active=online'
            {{- if .Values.debug.jpda.enabled }}
            - name: JPDA_ENABLE
              value: "true"
            - name: JPDA_PORT
              value: {{ default "5005" .Values.debug.jpda.port | quote }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: '{{ .Values.image.backend.repository }}:{{ .Values.image.backend.tag | default .Chart.AppVersion }}'
          imagePullPolicy: {{ .Values.image.backend.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            {{- if .Values.debug.jpda.enabled }}
            - name: jpda
              containerPort: {{ default 5005 .Values.debug.jpda.port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: public/check/live
              port: http
            initialDelaySeconds: 60
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: public/check/ready
              port: http
            initialDelaySeconds: 60
            failureThreshold: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-private
              mountPath: /home/{{ .Values.systemAccount }}/{{ include "helpers.name" . }}/config
            - name: config-runtime
              mountPath: /home/{{ .Values.systemAccount }}/{{ include "helpers.name" . }}/config.run
            - name: persistence
              mountPath: /home/{{ .Values.systemAccount }}/{{ include "helpers.name" . }}/logs
              subPath: logs
            - name: persistence
              mountPath: /home/{{ .Values.systemAccount }}/{{ include "helpers.name" . }}/data
              subPath: data
        {{- if (index .Values "grafana-loki" "deployment" "enabled") }}
        - name: promtail
          image: '{{ .Values.image.promtail.repository | default "grafana/promtail" }}:{{ .Values.image.promtail.tag | default "latest" }}'
          imagePullPolicy: {{ .Values.image.promtail.pullPolicy | default "IfNotPresent" }}
          args:
            - "-config.file=/etc/promtail/promtail.yaml"
          volumeMounts:
            - name: promtail-config
              mountPath: /etc/promtail
            - name: promtail-positions
              mountPath: /run/promtail
            - name: persistence
              mountPath: /home/{{ .Values.systemAccount }}/{{ include "helpers.name" . }}/logs
              subPath: logs
        {{- end }}
      volumes:
        - name: config-private
          secret:
            secretName: {{ include "helpers.fullname" . }}-spring-properties
            items:
              - key: application-private.yml
                path: application-private.yml
        - name: config-runtime
          configMap:
            name: {{ include "helpers.fullname" . }}-runtime-configuration
            items:
              - key: application-runtime.properties
                path: application-runtime.properties
        - name: persistence
          persistentVolumeClaim:
            claimName: {{ include "helpers.fullname" . }}-pvc
        {{- if (index .Values "grafana-loki" "deployment" "enabled") }}
        - name: promtail-config
          configMap:
            name: {{ include "helpers.fullname" . }}-promtail-configuration
            items:
              - key: promtail.yaml
                path: promtail.yaml
        - name: promtail-positions
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}