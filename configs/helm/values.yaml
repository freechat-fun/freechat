global:
  redis:
    password: ''
  defaultStorageClass: 'default'
  storageClass: 'default'
backend:
  enabled: true
  auth:
    aes:
      key: ''
    oauth2:
      aliyun:
        enable: true
        authorizationGrantType: authorization_code
        clientAuthenticationMethod: client_secret_basic
        clientName: Aliyun
        scope: openid
        clientId: ''
        clientSecret: ''
      github:
        enable: true
        scope: ''
        clientId: ''
        clientSecret: ''
      google:
        enable: true
        scope: openid,profile,email
        clientId: ''
        clientSecret: ''
  autoscaling:
    enabled: false
  container:
    server:
      port: 8080
    management:
      port: 8081
  debug:
    jpda:
      enabled: false
      port: 5005
  image:
    pullPolicy: Always
    repository: freechatfun/freechat
    tag: ''
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: freechat-letsencrypt-http01
      nginx.ingress.kubernetes.io/proxy-body-size: "20M"
      nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    className: nginx
    enabled: true
    hosts:
      - host: freechat.fun
        paths:
          - path: /
            pathType: Prefix
      - host: www.freechat.fun
        redirect: true
        paths:
          - path: /
            pathType: Prefix
      - host: cn.freechat.fun
        paths:
          - path: /
            pathType: Prefix
    tls:
      enabled: true
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    annotations:
      helm.sh/resource-policy: keep
    size: 8Gi
  pdb:
    create: true
    minAvailable: ''
    maxUnavailable: ''
  podSecurityContext:
    fsGroup: 10000
  replicaCount: 2
  resources:
    limits: {}
    requests: {}
  securityContext:
    runAsGroup: 10000
    runAsUser: 10000
  service:
    ports:
      http: 80
    type: ClusterIP
  systemAccount: admin
  spring: {}
  busybox:
    image:
      pullPolicy: IfNotPresent
      repository: busybox
      tag: 'latest'
  promtail:
    image:
      pullPolicy: IfNotPresent
      repository: grafana/promtail
      tag: 'latest'
frontend:
  enabled: false
  autoscaling:
    enabled: false
  image:
    pullPolicy: Always
    repository: freechatfun/freechat
    tag: ''
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: freechat-letsencrypt-http01
      nginx.ingress.kubernetes.io/proxy-body-size: "20M"
      nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    className: nginx
    enabled: true
    hosts:
      - host: freechat.fun
        paths:
          - path: /assets
            pathType: Prefix
      - host: www.freechat.fun
        redirect: true
        paths:
          - path: /assets
            pathType: Prefix
      - host: cn.freechat.fun
        paths:
          - path: /assets
            pathType: Prefix
    tls:
      enabled: true
  pdb:
    create: true
    minAvailable: ''
    maxUnavailable: ''
  replicaCount: 2
  resources:
    limits: {}
    requests: {}
  service:
    ports:
      http: 80
    type: ClusterIP
cert:
  manager:
    namespace: cert-manager
    version: v1.16.1
mysql:
  enabled: true
  url: jdbc:mysql://freechat-mysql:3306/freechat?useUnicode=true&characterEncoding=utf-8
  auth:
    database: freechat
    username: freechat
    password: ''
    rootPassword: ''
  initdbScripts:
    1-schema.sql: ''
    2-data.sql: ''
  metrics:
    enabled: false
redis:
  enabled: true
  url: redis://freechat-redis-master:6379
  replica:
    replicaCount: 0
  metrics:
    enabled: false
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
milvus:
  enabled: true
  url: http://freechat-milvus-proxy:19530
  initJob:
    metrics:
      enabled: false
  waitContainer:
    metrics:
      enabled: false
  dataCoord:
    metrics:
      enabled: false
  rootCoord:
    metrics:
      enabled: false
  queryCoord:
    metrics:
      enabled: false
  indexCoord:
    metrics:
      enabled: false
  dataNode:
    metrics:
      enabled: false
  queryNode:
    metrics:
      enabled: false
  indexNode:
    metrics:
      enabled: false
  milvus:
    auth:
      enabled: true
      username: freechat
      password: ''
      rootPassword: ''
      token: ''
  minio:
    persistence:
      annotations:
        helm.sh/resource-policy: keep
  etcd:
    pdb:
      minAvailable: ''
    replicaCount: 1
  proxy:
    service:
      type: ClusterIP
    metrics:
      enabled: false
  attu:
    service:
      type: ClusterIP
    ingress:
      enabled: true
      hostname: milvus.freechat.fun
      ingressClassName: nginx
      tls: true
      annotations:
        cert-manager.io/cluster-issuer: freechat-letsencrypt-http01
tts:
  baseUrl: https://tts.freechat.fun
prometheus:
  enabled: false
  server:
    service:
      type: ClusterIP
    existingConfigmap: freechat-prometheus-configuration
    existingConfigmapKey: prometheus.yaml
  alertmanager:
    enabled: false
    service:
      type: ClusterIP
grafana:
  enabled: false
  admin:
    user: freechat
    password: ''
  persistence:
    annotations:
      helm.sh/resource-policy: keep
    size: 8Gi
  ingress:
    enabled: true
    hostname: grafana.freechat.fun
    ingressClassName: nginx
    tls: true
    annotations:
      cert-manager.io/cluster-issuer: freechat-letsencrypt-http01
grafana-loki:
  enabled: false
  compactor:
    persistence:
      annotations:
        helm.sh/resource-policy: keep
  promtail:
    containerPorts:
      http: 9080
kube-state-metrics:
  enabled: false
serviceAccount:
  create: true