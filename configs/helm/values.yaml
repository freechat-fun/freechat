global:
  redis:
    password: ''
  defaultStorageClass: 'default'
  storageClass: 'default'
backend:
  enabled: true
auth:
  aes:
    key: ''
  oauth2:
    aliyun:
      enable: true
      authorizationGrantType: authorization_code
      clientAuthenticationMethod: client_secret_basic
      clientName: Aliyun
      scope: openid
      clientId: ''
      clientSecret: ''
    github:
      enable: true
      scope: ''
      clientId: ''
      clientSecret: ''
    google:
      enable: true
      scope: openid,profile,email
      clientId: ''
      clientSecret: ''
autoscaling:
  enabled: false
cert:
  manager:
    namespace: cert-manager
    version: v1.16.1
debug:
  jpda:
    enabled: false
    port: 5005
deployment:
  backend:
    enabled: true
  frontend:
    enabled: false
image:
  backend:
    pullPolicy: Always
    repository: freechatfun/freechat
    tag: ''
  frontend:
    pullPolicy: Always
    repository: freechatfun/freechat-web
    tag: ''
  busybox:
    pullPolicy: IfNotPresent
    repository: busybox
    tag: 'latest'
  promtail:
    pullPolicy: IfNotPresent
    repository: grafana/promtail
    tag: 'latest'
ingress:
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: freechat-letsencrypt-http01
    nginx.ingress.kubernetes.io/proxy-body-size: "20M"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  hosts:
    - host: freechat.fun
      backend:
        paths:
          - path: /
            pathType: Prefix
      frontend:
        paths:
          - path: /assets
            pathType: Prefix
    - host: www.freechat.fun
      redirect: true
      backend:
        paths:
          - path: /
            pathType: Prefix
      frontend:
        paths:
          - path: /assets
            pathType: Prefix
    - host: cn.freechat.fun
      backend:
        paths:
          - path: /
            pathType: Prefix
      frontend:
        paths:
          - path: /assets
            pathType: Prefix
  tls:
    enabled: true
mysql:
  deployment:
    enabled: true
  url: jdbc:mysql://freechat-mysql:3306/freechat?useUnicode=true&characterEncoding=utf-8
  auth:
    database: freechat
    username: freechat
    password: ''
    rootPassword: ''
  initdbScripts:
    1-schema.sql: ''
    2-data.sql: ''
  metrics:
    enabled: true
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    resourcesPreset: none
  primary:
    resourcesPreset: none
  secondary:
    resourcesPreset: none
  volumePermissions:
    resourcesPreset: none
redis:
  deployment:
    enabled: true
  url: redis://freechat-redis-master:6379
  replica:
    replicaCount: 0
  metrics:
    enabled: true
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
milvus:
  deployment:
    enabled: true
  url: http://freechat-milvus-proxy:19530
  initJob:
    resourcesPreset: none
    metrics:
      enabled: true
  waitContainer:
    resourcesPreset: none
    metrics:
      enabled: true
  dataCoord:
    resourcesPreset: none
    metrics:
      enabled: true
  rootCoord:
    resourcesPreset: none
    metrics:
      enabled: true
  queryCoord:
    resourcesPreset: none
    metrics:
      enabled: true
  indexCoord:
    resourcesPreset: none
    metrics:
      enabled: true
  dataNode:
    resourcesPreset: none
    metrics:
      enabled: true
  queryNode:
    resourcesPreset: none
    metrics:
      enabled: true
  indexNode:
    resourcesPreset: none
    metrics:
      enabled: true
  milvus:
    auth:
      enabled: true
      username: freechat
      password: ''
      rootPassword: ''
      token: ''
  etcd:
    pdb:
      minAvailable: ''
    replicaCount: 1
  kafka:
    broker:
      resourcesPreset: none
    controller:
      resourcesPreset: none
    provisioning:
      resourcesPreset: none
    volumePermissions:
      resourcesPreset: none
    metrics:
      jmx:
        resourcesPreset: none
  minio:
    resourcesPreset: none
    provisioning:
      resourcesPreset: none
    volumePermissions:
      resourcesPreset: none
  proxy:
    service:
      type: ClusterIP
    metrics:
      enabled: true
    resourcesPreset: none
  attu:
    service:
      type: ClusterIP
    ingress:
      enabled: true
      hostname: milvus.freechat.fun
      ingressClassName: nginx
      tls: true
      annotations:
        cert-manager.io/cluster-issuer: freechat-letsencrypt-http01
    resourcesPreset: none
prometheus:
  deployment:
    enabled: false
  server:
    service:
      type: ClusterIP
    existingConfigmap: freechat-prometheus-configuration
    existingConfigmapKey: prometheus.yaml
  alertmanager:
    enabled: false
    service:
      type: ClusterIP
grafana:
  deployment:
    enabled: false
  admin:
    user: freechat
    password: ''
  persistence:
    size: 8Gi
  ingress:
    enabled: true
    hostname: grafana.freechat.fun
    ingressClassName: nginx
    tls: true
    annotations:
      cert-manager.io/cluster-issuer: freechat-letsencrypt-http01
grafana-loki:
  deployment:
    enabled: false
  promtail:
    containerPorts:
      http: 9080
kube-state-metrics:
  deployment:
    enabled: false
pdb:
  create: true
  minAvailable: ''
  maxUnavailable: ''
persistence:
  enabled: false
  accessModes: [ ReadWriteOnce ]
  storage: 8Gi
replicaCount: 2
resources:
  limits: {}
  requests: {}
podSecurityContext:
  fsGroup: 2024
securityContext:
  runAsUser: 2024
  runAsGroup: 2024
service:
  ports:
    http: 80
  type: ClusterIP
serviceAccount:
  create: true
systemAccount: admin
spring: {}
