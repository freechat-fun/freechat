info.title=FreeChat 开放接口定义
tags.[0].description=应用元信息，需要超级管理员角色才能查看。
tags.[1].description=管理模型信息，需要超级管理员、业务管理员角色才能调用。
tags.[2].description=系统加密服务，需要超级管理员角色才能调用。
tags.[3].description=管理标签，需要超级管理员、业务管理员角色才能调用。
tags.[4].description=管理用户，需要超级管理员角色才能调用。
tags.[5].description=应用配置信息，需要超级管理员角色才能查看。
paths./api/v1/prompt/{promptId}.put.summary=更新 prompt
paths./api/v1/prompt/{promptId}.put.description=更新 prompt，参考 /api/v1/prompt/create，必须字段：promptId。返回成功或失败。
paths./api/v1/prompt/{promptId}.put.parameters.[0].description=待更新的 promptId
paths./api/v1/prompt/{promptId}.put.requestBody.description=待更新的 prompt 信息
paths./api/v1/prompt/{promptId}.delete.summary=删除 prompt
paths./api/v1/prompt/{promptId}.delete.description=删除 prompt。返回成功或失败。
paths./api/v1/prompt/{promptId}.delete.parameters.[0].description=待删除的 promptId
paths./api/v1/plugin/{pluginId}.put.summary=更新 plugin
paths./api/v1/plugin/{pluginId}.put.description=更新 plugin，参考 /api/v1/plugin/create，必须字段：pluginId。返回成功或失败。
paths./api/v1/plugin/{pluginId}.put.parameters.[0].description=待更新的 pluginId
paths./api/v1/plugin/{pluginId}.put.requestBody.description=待更新的 plugin 信息
paths./api/v1/plugin/{pluginId}.delete.summary=删除 plugin
paths./api/v1/plugin/{pluginId}.delete.description=删除 plugin。返回成功或失败。
paths./api/v1/plugin/{pluginId}.delete.parameters.[0].description=待删除的 pluginId
paths./api/v1/plugin/refresh/{pluginId}.put.summary=刷新 plugin 信息
paths./api/v1/plugin/refresh/{pluginId}.put.description=对于录入时提供的是 URL 的在线 manifest、api-docs 信息，这个接口可以立即刷新系统缓存中的信息（默认缓存时间为 1 小时）。一般不需要调用，除非知道对应的插件平台刚刚更新接口，且业务方想立即获取最新信息，则调用此接口删除系统缓存。
paths./api/v1/plugin/refresh/{pluginId}.put.parameters.[0].description=需要获取的 pluginId
paths./api/v1/org/manage/{username}/subordinates.get.summary=获取下层关系
paths./api/v1/org/manage/{username}/subordinates.get.description=获取下属账号的下层关系，包括直接和间接的 subordinates，默认不包含虚线管理的下层 subordinates，因此也不会存在环状关系。<br/>通过指定 all=1 可以返回虚线管理的 subordinates，这种情况下，可能存在环状关系。
paths./api/v1/org/manage/{username}/subordinates.get.parameters.[0].description=被查询的账号，必须是当前账号的下属账号
paths./api/v1/org/manage/{username}/subordinates.get.parameters.[1].description=是否返回虚线管理的 subordinates
paths./api/v1/org/manage/{username}/subordinates.put.summary=更新下层关系
paths./api/v1/org/manage/{username}/subordinates.put.description=全量更新下属账号的直接下层关系（即，会删除早前存在但在此次列表中没有的关系），如果出现环状关系，则自动设置为虚线关系。
paths./api/v1/org/manage/{username}/subordinates.put.parameters.[0].description=被操作的账号，必须是当前账号的下属账号
paths./api/v1/org/manage/{username}/subordinates.put.requestBody.description=下属账号的（直接）下层账号，所有账号都必须是当前账号的下属账号
paths./api/v1/org/manage/{username}/subordinates.delete.summary=清除下层关系
paths./api/v1/org/manage/{username}/subordinates.delete.description=全量清除下属账号的直接下层关系。
paths./api/v1/org/manage/{username}/subordinates.delete.parameters.[0].description=被操作的账号，必须是当前账号的下属账号
paths./api/v1/org/manage/{username}/owners.get.summary=获取上层关系
paths./api/v1/org/manage/{username}/owners.get.description=获取下属账号的上层关系，包括直接和间接的 owners，默认不包含虚线汇报的上层 owners，因此也不会存在环状关系。<br/>通过指定 all=1 可以返回虚线汇报的 owners，这种情况下，可能存在环状关系。
paths./api/v1/org/manage/{username}/owners.get.parameters.[0].description=被查询的账号，必须是当前账号的下属账号
paths./api/v1/org/manage/{username}/owners.get.parameters.[1].description=是否返回虚线汇报的 owners
paths./api/v1/org/manage/{username}/owners.put.summary=更新上层关系
paths./api/v1/org/manage/{username}/owners.put.description=全量更新下属账号的直接上层关系（即，会删除早前存在但在此次列表中没有的关系），如果出现环状关系，则自动设置为虚线关系。
paths./api/v1/org/manage/{username}/owners.put.parameters.[0].description=被操作的账号，必须是当前账号的下属账号
paths./api/v1/org/manage/{username}/owners.put.requestBody.description=下属账号的（直接）上层账号，所有账号都必须是当前账号的下属账号
paths./api/v1/org/authority/{username}.get.summary=获取下属权限
paths./api/v1/org/authority/{username}.get.description=获取下属账号权限列表。
paths./api/v1/org/authority/{username}.get.parameters.[0].description=用户名
paths./api/v1/org/authority/{username}.put.summary=更新下属权限
paths./api/v1/org/authority/{username}.put.description=更新下属账号权限列表，所授予的权限不能高于自身拥有的权限，比如资源管理员不能授予下属账号组织管理员的角色。
paths./api/v1/org/authority/{username}.put.parameters.[0].description=用户名
paths./api/v1/org/authority/{username}.put.requestBody.description=权限列表
paths./api/v1/flow/{flowId}.put.summary=更新 flow
paths./api/v1/flow/{flowId}.put.description=更新 flow，参考 /api/v1/flow/create，必须字段：flowId。返回成功或失败。
paths./api/v1/flow/{flowId}.put.parameters.[0].description=待更新的 flowId
paths./api/v1/flow/{flowId}.put.requestBody.description=待更新的 flow 信息
paths./api/v1/flow/{flowId}.delete.summary=删除 flow
paths./api/v1/flow/{flowId}.delete.description=删除 flow。返回成功或失败。
paths./api/v1/flow/{flowId}.delete.parameters.[0].description=待删除的 flowId
paths./api/v1/biz/admin/ai/model.put.summary=新建或更新模型信息
paths./api/v1/biz/admin/ai/model.put.description=新建或更新模型信息。如果没有传 modelId 或者 modelId 在数据库中不存在，则新建（保留同样的 modelId）；否则更新。成功则返回 modelId。
paths./api/v1/biz/admin/ai/model.put.requestBody.description=模型信息
paths./api/v1/ai/apikey/enable/{id}.put.summary=启用模型服务凭证
paths./api/v1/ai/apikey/enable/{id}.put.description=启用模型服务的凭证信息。
paths./api/v1/ai/apikey/enable/{id}.put.parameters.[0].description=凭证标识符
paths./api/v1/ai/apikey/disable/{id}.put.summary=禁用模型服务凭证
paths./api/v1/ai/apikey/disable/{id}.put.description=禁用模型服务的凭证信息。
paths./api/v1/ai/apikey/disable/{id}.put.parameters.[0].description=凭证标识符
paths./api/v1/admin/user.put.summary=更新用户
paths./api/v1/admin/user.put.description=更新用户信息。
paths./api/v1/admin/user.put.requestBody.description=用户信息
paths./api/v1/admin/user.post.summary=创建用户
paths./api/v1/admin/user.post.description=创建用户。
paths./api/v1/admin/user.post.requestBody.description=用户信息
paths./api/v1/admin/token/{token}.put.summary=禁用 API Token
paths./api/v1/admin/token/{token}.put.description=禁用指定的 API Token。
paths./api/v1/admin/token/{token}.put.parameters.[0].description=API Token
paths./api/v1/admin/token/{token}.delete.summary=删除 API Token
paths./api/v1/admin/token/{token}.delete.description=删除指定的 API Token。
paths./api/v1/admin/token/{token}.delete.parameters.[0].description=API Token
paths./api/v1/admin/authority/{username}.get.summary=获取用户权限
paths./api/v1/admin/authority/{username}.get.description=获取用户权限列表。
paths./api/v1/admin/authority/{username}.get.parameters.[0].description=用户名
paths./api/v1/admin/authority/{username}.put.summary=更新用户权限
paths./api/v1/admin/authority/{username}.put.description=更新用户权限列表。
paths./api/v1/admin/authority/{username}.put.parameters.[0].description=用户名
paths./api/v1/admin/authority/{username}.put.requestBody.description=权限列表
paths./api/v1/account/token/{token}.put.summary=禁用 API Token
paths./api/v1/account/token/{token}.put.description=禁用一个 API Token，token 并未被删除。
paths./api/v1/account/token/{token}.put.parameters.[0].description=token 内容
paths./api/v1/account/token/{token}.delete.summary=删除 API Token
paths./api/v1/account/token/{token}.delete.description=删除一个 API Token。
paths./api/v1/account/token/{token}.delete.parameters.[0].description=token 内容
paths./api/v1/account/details.get.summary=获取详细用户信息
paths./api/v1/account/details.get.description=返回当前账号的详细用户信息，字段参考 OpenID Connect (OIDC) 的[标准声明](https://openid.net/specs/openid-connect-core-1_0.html#Claims)。
paths./api/v1/account/details.put.summary=更新详细用户信息
paths./api/v1/account/details.put.description=更新当前账号的详细用户信息。
paths./api/v1/account/details.put.requestBody.description=用户信息
paths./api/v1/prompt.post.summary=创建 prompt
paths./api/v1/prompt.post.description=创建 prompt，必须字段：\n- Prompt 标题\n- Prompt 内容\n- 适用模型\n\n额度限制：\n- 描述：300 字\n- 模版：1000 字\n- 示例：2000 字\n- 标签：5 个\n- 参数：10\n
paths./api/v1/prompt.post.requestBody.description=待创建的 prompt 信息
paths./api/v1/prompt/versions/{name}.post.summary=根据 prompt 名称获取版本列表
paths./api/v1/prompt/versions/{name}.post.description=根据 prompt 名称获取版本列表以及对应的 promptIds。
paths./api/v1/prompt/versions/{name}.post.parameters.[0].description=Prompt 名称
paths./api/v1/prompt/send.post.summary=发送 prompt
paths./api/v1/prompt/send.post.description=发送 prompt 至 AI 服务，返回格式参考 AiForPromptResultDTO。注意，如果调用的是 embedding 模型，则返回的是 embedding 数组，放置在结果的 details 字段中；结果中的 text 字段内是原文。
paths./api/v1/prompt/send.post.requestBody.description=调用参数
paths./api/v1/prompt/search.post.summary=查询 prompt 摘要
paths./api/v1/prompt/search.post.description=查询 prompt：\n- 可以指定的查询字段，and 关系：\n   - 范围：private, public_org 或 public。private 只能搜索本账号。\n   - 用户名：精确匹配，仅在搜索 public、public_org 时有效。不指定则搜索全部用户。\n   - 标签：精确匹配（支持 and、 or 逻辑）。\n   - 模型种类：精确匹配（支持 and、 or 逻辑）。\n   - 标题：左匹配。\n   - 类型，精确匹配：string（默认） | chat。\n   - 语种，精确匹配。\n   - 通用：标题、描述、模版、示例，模糊匹配，其一命中即可；public 范围 + 全部用户的通用搜索不保证实时性。\n- 可以指定一定的排序规则，如查看次数、引用次数、评分、时间，倒序或正序。\n- 搜索结果为 prompt 摘要内容。\n- 支持分页。\n
paths./api/v1/prompt/search.post.requestBody.description=查询条件
paths./api/v1/prompt/publish/{promptId}/{visibility}.post.summary=发布 prompt
paths./api/v1/prompt/publish/{promptId}/{visibility}.post.description=发布 prompt，草稿内容转变为正式内容，版本号增加 1。返回发布成功后会产生新的 promptId 并返回。需指定以何种可见性进行发布。
paths./api/v1/prompt/publish/{promptId}/{visibility}.post.parameters.[0].description=需要发布的 promptId
paths./api/v1/prompt/publish/{promptId}/{visibility}.post.parameters.[1].description=可见性：public | private | ...
paths./api/v1/prompt/details/search.post.summary=查询 prompt 详细信息
paths./api/v1/prompt/details/search.post.description=同 /api/v1/prompt/search，但返回 prompt 详细信息。
paths./api/v1/prompt/details/search.post.requestBody.description=查询条件
paths./api/v1/prompt/count.post.summary=计算 prompts 数量
paths./api/v1/prompt/count.post.description=按指定的查询条件计算 prompts 数量。
paths./api/v1/prompt/count.post.requestBody.description=查询条件
paths./api/v1/prompt/clone/{promptId}.post.summary=克隆 prompt
paths./api/v1/prompt/clone/{promptId}.post.description=传入 promptId，产生一条新的记录，内容与原 prompt 基本相同，但以下字段不同：\n- 版本号为 1\n- 可见性为 private\n- 父 prompt 为源 promptId\n- 创建时间为当前时刻。\n- 各统计指标清零。\n\n返回新的 promptId。\n
paths./api/v1/prompt/clone/{promptId}.post.parameters.[0].description=引用的 promptId
paths./api/v1/prompt/batch.post.summary=批量创建 prompts
paths./api/v1/prompt/batch.post.description=批量创建多个 prompts。保证事务性，返回成功后的 promptId 列表。
paths./api/v1/prompt/batch.post.requestBody.description=待创建的 prompt 信息列表
paths./api/v1/prompt/batch.delete.summary=批量删除 prompts
paths./api/v1/prompt/batch.delete.description=删除多个 prompts。保证事务性，返回删除成功的 promptId 列表。
paths./api/v1/prompt/batch.delete.requestBody.description=待删除的 promptId 列表
paths./api/v1/prompt/batch/search.post.summary=批量查询 prompts 摘要
paths./api/v1/prompt/batch/search.post.description=/api/v1/prompt/search 的批量调用快捷方式。
paths./api/v1/prompt/batch/search.post.requestBody.description=查询条件
paths./api/v1/prompt/batch/details/search.post.summary=批量查询 prompts 详细信息
paths./api/v1/prompt/batch/details/search.post.description=/api/v1/prompt/details/search 的批量调用快捷方式。
paths./api/v1/prompt/batch/details/search.post.requestBody.description=查询条件
paths./api/v1/prompt/batch/clone.post.summary=批量克隆 prompts
paths./api/v1/prompt/batch/clone.post.description=批量克隆多个 prompts。保证事务性，返回成功后的 promptId 列表。
paths./api/v1/prompt/batch/clone.post.requestBody.description=待创建的 prompt 信息列表
paths./api/v1/prompt/apply/string.post.summary=将参数应用到 string 类型 prompt 模版
paths./api/v1/prompt/apply/string.post.description=将参数应用到 string 类型 prompt 模版。
paths./api/v1/prompt/apply/string.post.requestBody.description=string 类型 prompt 模版
paths./api/v1/prompt/apply/ref.post.summary=将参数应用到 prompt 记录
paths./api/v1/prompt/apply/ref.post.description=将参数应用到 prompt 记录。
paths./api/v1/prompt/apply/ref.post.requestBody.description=prompt 记录
paths./api/v1/plugin.post.summary=创建 plugin
paths./api/v1/plugin.post.description=创建 plugin，必须字段：\n- plugin 标题\n- plugin manifestInfo（URL 或 JSON）\n- plugin apiInfo（URL 或 JSON）\n\n额度限制：\n- 标题：100 字\n- 示例：2000 字\n- 标签：5 个\n
paths./api/v1/plugin.post.requestBody.description=待创建的 plugin 信息
paths./api/v1/plugin/search.post.summary=查询 plugin 摘要
paths./api/v1/plugin/search.post.description=查询 plugin：\n- 可以指定的查询字段，and 关系：\n   - 范围：private, public_org 或 public。private 只能搜索本账号。\n   - 用户名：精确匹配，仅在搜索 public、public_org 时有效。不指定则搜索全部用户。\n   - 插件信息格式：目前支持：dash_scope, open_ai。\n   - 接口信息格式：当前支持：openapi_v3。\n   - 标签：精确匹配（支持 and、 or 逻辑）。\n   - 模型种类：精确匹配（支持 and、 or 逻辑）。\n   - 标题：左匹配。\n   - 提供者：左匹配。\n   - 通用：标题、提供者信息、manifest（实时拉取的方式暂不支持），模糊匹配，其一命中即可；public 范围 + 全部用户的通用搜索不保证实时性。\n- 可以指定一定的排序规则，如查看次数、引用次数、评分、时间，倒序或正序。\n- 搜索结果为 plugin 摘要内容。\n- 支持分页。\n
paths./api/v1/plugin/search.post.requestBody.description=查询条件
paths./api/v1/plugin/details/search.post.summary=查询 plugin 详细信息
paths./api/v1/plugin/details/search.post.description=同 /api/v1/plugin/search，但返回 plugin 详细信息。
paths./api/v1/plugin/details/search.post.requestBody.description=查询条件
paths./api/v1/plugin/count.post.summary=计算 plugins 数量
paths./api/v1/plugin/count.post.description=按指定的查询条件计算 plugins 数量。
paths./api/v1/plugin/count.post.requestBody.description=查询条件
paths./api/v1/plugin/batch.post.summary=批量创建 plugins
paths./api/v1/plugin/batch.post.description=批量创建多个 plugins。保证事务性，返回成功后的 pluginId 列表。
paths./api/v1/plugin/batch.post.requestBody.description=待创建的 plugins 信息列表
paths./api/v1/plugin/batch.delete.summary=批量删除 plugins
paths./api/v1/plugin/batch.delete.description=删除多个 plugins。保证事务性，返回删除成功的 pluginId 列表。
paths./api/v1/plugin/batch.delete.requestBody.description=待删除的 pluginId 列表
paths./api/v1/plugin/batch/search.post.summary=批量查询 plugins 摘要
paths./api/v1/plugin/batch/search.post.description=/api/v1/plugin/search 的批量调用快捷方式。
paths./api/v1/plugin/batch/search.post.requestBody.description=查询条件
paths./api/v1/plugin/batch/details/search.post.summary=批量查询 plugins 详细信息
paths./api/v1/plugin/batch/details/search.post.description=/api/v1/plugin/details/search 的批量调用快捷方式。
paths./api/v1/plugin/batch/details/search.post.requestBody.description=查询条件
paths./api/v1/flow.post.summary=创建 flow
paths./api/v1/flow.post.description=创建 flow，忽略 必须字段：\n- Flow 标题\n- Flow 配置\n\n额度限制：\n- 描述：300 字\n- 配置：2000 字符\n- 示例：2000 字\n- 标签：5 个\n- 参数：10\n
paths./api/v1/flow.post.requestBody.description=待创建的 flow 信息
paths./api/v1/flow/versions/{name}.post.summary=根据 flow 名称获取版本列表
paths./api/v1/flow/versions/{name}.post.description=根据 flow 名称获取版本列表以及对应的 flowIds。
paths./api/v1/flow/versions/{name}.post.parameters.[0].description=Flow 名称
paths./api/v1/flow/search.post.summary=查询 flow 摘要
paths./api/v1/flow/search.post.description=查询 flow：\n- 可以指定的查询字段，and 关系：\n   - 范围：private, public_org 或 public。private 只能搜索本账号。\n   - 用户名：精确匹配，仅在搜索 public、public_org 时有效。不指定则搜索全部用户。\n   - 格式：精确匹配，目前支持：langflow\n   - 标签：精确匹配（支持 and、 or 逻辑）。\n   - 模型种类：精确匹配（支持 and、 or 逻辑）。\n   - 标题：左匹配。\n   - 通用：标题、描述、示例，模糊匹配，其一命中即可；public 范围 + 全部用户的通用搜索不保证实时性。\n- 可以指定一定的排序规则，如查看次数、引用次数、评分、时间，倒序或正序。\n- 搜索结果为 flow 摘要内容。\n- 支持分页。\n
paths./api/v1/flow/search.post.requestBody.description=查询条件
paths./api/v1/flow/publish/{flowId}/{visibility}.post.summary=发布 flow
paths./api/v1/flow/publish/{flowId}/{visibility}.post.description=发布 flow，草稿内容转变为正式内容，版本号增加 1。返回发布成功后会产生新的 flowId 并返回。需指定以何种可见性进行发布。
paths./api/v1/flow/publish/{flowId}/{visibility}.post.parameters.[0].description=需要发布的 flowId
paths./api/v1/flow/publish/{flowId}/{visibility}.post.parameters.[1].description=可见性：public | private | ...
paths./api/v1/flow/details/search.post.summary=查询 flow 详细信息
paths./api/v1/flow/details/search.post.description=同 /api/v1/flow/search，但返回 flow 详细信息。
paths./api/v1/flow/details/search.post.requestBody.description=查询条件
paths./api/v1/flow/count.post.summary=计算 flows 数量
paths./api/v1/flow/count.post.description=按指定的查询条件计算 flows 数量。
paths./api/v1/flow/count.post.requestBody.description=查询条件
paths./api/v1/flow/clone/{flowId}.post.summary=克隆 flow
paths./api/v1/flow/clone/{flowId}.post.description=传入 flowId，产生一条新的记录，内容与原 flow 基本相同，但以下字段不同：\n- 版本号为 1\n- 可见性为 private\n- 父 flow 为源 flowId\n- 创建时间为当前时刻。\n- 各统计指标清零。\n\n返回新的 flowId。\n
paths./api/v1/flow/clone/{flowId}.post.parameters.[0].description=引用的 flowId
paths./api/v1/flow/batch.post.summary=批量创建 flows
paths./api/v1/flow/batch.post.description=批量创建多个 flows。保证事务性，返回成功后的 flowId 列表。
paths./api/v1/flow/batch.post.requestBody.description=待创建的 flow 信息列表
paths./api/v1/flow/batch/search.post.summary=批量查询 flows 摘要
paths./api/v1/flow/batch/search.post.description=/api/v1/flow/search 的批量调用快捷方式。
paths./api/v1/flow/batch/search.post.requestBody.description=查询条件
paths./api/v1/flow/batch/details/search.post.summary=批量查询 flows 详细信息
paths./api/v1/flow/batch/details/search.post.description=/api/v1/flow/details/search 的批量调用快捷方式。
paths./api/v1/flow/batch/details/search.post.requestBody.description=查询条件
paths./api/v1/flow/batch/clone.post.summary=批量克隆 flows
paths./api/v1/flow/batch/clone.post.description=批量克隆多个 flows。保证事务性，返回成功后的 flowId 列表。
paths./api/v1/flow/batch/clone.post.requestBody.description=待创建的 flow 信息列表
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.post.summary=创建标签
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.post.description=创建标签，管理员创建的标签无法被普通用户删除。
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.post.parameters.[0].description=标签类型（prompt, flow, plugin...）
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.post.parameters.[1].description=标签作用的资源标识
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.post.parameters.[2].description=标签内容
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.delete.summary=删除标签
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.delete.description=删除标签，可删除任何人创建的标签。
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.delete.parameters.[0].description=标签类型（prompt, flow, plugin...）
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.delete.parameters.[1].description=标签作用的资源标识
paths./api/v1/biz/admin/tag/{referType}/{referId}/{tag}.delete.parameters.[2].description=标签内容
paths./api/v1/ai/apikey.post.summary=增加模型服务凭证
paths./api/v1/ai/apikey.post.description=增加模型服务的凭证信息。
paths./api/v1/ai/apikey.post.requestBody.description=模型调用凭证信息
paths./api/v1/admin/token/{username}/{duration}.post.summary=为用户创建 API Token。
paths./api/v1/admin/token/{username}/{duration}.post.description=为指定的用户创建一个 API Token，有效期为 duration 秒。
paths./api/v1/admin/token/{username}/{duration}.post.parameters.[0].description=用户名
paths./api/v1/admin/token/{username}/{duration}.post.parameters.[1].description=有效期（秒）
paths./api/v1/admin/app/configs.post.summary=列出配置名称
paths./api/v1/admin/app/configs.post.description=列出所有应用配置名称。
paths./api/v1/admin/app/config.post.summary=发布配置
paths./api/v1/admin/app/config.post.description=发布应用配置，返回配置版本。
paths./api/v1/admin/app/config.post.requestBody.description=配置信息
paths./api/v1/account/token.post.summary=创建 API Token
paths./api/v1/account/token.post.description=创建一个不限时长的 API Token。
paths./api/v1/account/token/{duration}.post.summary=创建限时 API Token
paths./api/v1/account/token/{duration}.post.description=创建一个限时 API Token，有效期为 {duration} 秒。
paths./api/v1/account/token/{duration}.post.parameters.[0].description=token 有效时长（秒）
paths./api/v1/prompt/summary/{promptId}.get.summary=获取 prompt 摘要
paths./api/v1/prompt/summary/{promptId}.get.description=获取 prompt 摘要信息。
paths./api/v1/prompt/summary/{promptId}.get.parameters.[0].description=需要获取的 promptId
paths./api/v1/prompt/details/{promptId}.get.summary=获取 prompt 详细信息
paths./api/v1/prompt/details/{promptId}.get.description=获取 prompt 详细信息。
paths./api/v1/prompt/details/{promptId}.get.parameters.[0].description=需要获取的 promptId
paths./api/v1/plugin/summary/{pluginId}.get.summary=获取 plugin 摘要
paths./api/v1/plugin/summary/{pluginId}.get.description=获取 plugin 摘要信息。
paths./api/v1/plugin/summary/{pluginId}.get.parameters.[0].description=需要获取的 pluginId
paths./api/v1/plugin/details/{pluginId}.get.summary=获取 plugin 详细信息
paths./api/v1/plugin/details/{pluginId}.get.description=获取 plugin 详细信息。
paths./api/v1/plugin/details/{pluginId}.get.parameters.[0].description=需要获取的 pluginId
paths./api/v1/org/subordinates.get.summary=获取自己的下层关系
paths./api/v1/org/subordinates.get.description=获取当前账号的下层关系，包括直接和间接的 subordinates，默认不包含虚线管理的下层 subordinates，因此也不会存在环状关系。<br/>通过指定 all=1 可以返回虚线管理的 subordinates，这种情况下，可能存在环状关系。
paths./api/v1/org/subordinates.get.parameters.[0].description=是否返回虚线管理的 subordinates
paths./api/v1/org/subordinates/dot.get.summary=获取下层关系的 DOT 视图
paths./api/v1/org/subordinates/dot.get.description=同 /api/v1/org/subordinates，但是返回 DOT 格式的视图，DOT 参考：[graphviz](https://www.graphviz.org/)
paths./api/v1/org/subordinates/dot.get.parameters.[0].description=是否返回虚线管理的 subordinates
paths./api/v1/org/owners.get.summary=获取自己的上层关系
paths./api/v1/org/owners.get.description=获取当前账号的上层关系，包括直接和间接的 owners，默认不包含虚线汇报的上层 owners，因此也不会存在环状关系。<br/>通过指定 all=1 可以返回虚线汇报的 owners，这种情况下，可能存在环状关系。
paths./api/v1/org/owners.get.parameters.[0].description=是否返回虚线汇报的 owners
paths./api/v1/org/owners/dot.get.summary=获取当前账号上层关系的 DOT 视图
paths./api/v1/org/owners/dot.get.description=同 /api/v1/org/owners，但是返回 DOT 格式的视图，DOT 参考：[graphviz](https://www.graphviz.org/)
paths./api/v1/org/owners/dot.get.parameters.[0].description=是否返回虚线汇报的 owners
paths./api/v1/flow/summary/{flowId}.get.summary=获取 flow 摘要
paths./api/v1/flow/summary/{flowId}.get.description=获取 flow 摘要信息。
paths./api/v1/flow/summary/{flowId}.get.parameters.[0].description=需要获取的 flowId
paths./api/v1/flow/details/{flowId}.get.summary=获取 flow 详细信息
paths./api/v1/flow/details/{flowId}.get.description=获取 flow 详细信息。
paths./api/v1/flow/details/{flowId}.get.parameters.[0].description=需要获取的 flowId
paths./api/v1/ai/models.get.summary=获取模型列表
paths./api/v1/ai/models.get.description=返回所有模型信息。
paths./api/v1/ai/models/{pageSize}.get.summary=按限制获取模型列表
paths./api/v1/ai/models/{pageSize}.get.description=返回模型信息，最多返回 pageSize 个模型信息。
paths./api/v1/ai/models/{pageSize}.get.parameters.[0].description=最大数量
paths./api/v1/ai/models/{pageSize}/{pageNum}.get.summary=按页获取模型列表
paths./api/v1/ai/models/{pageSize}/{pageNum}.get.description=分页返回模型信息，返回第 pageNum 页，最多 pageSize 个模型信息。
paths./api/v1/ai/models/{pageSize}/{pageNum}.get.parameters.[0].description=最大数量
paths./api/v1/ai/models/{pageSize}/{pageNum}.get.parameters.[1].description=当前页数
paths./api/v1/ai/model/{modelId}.get.summary=获取模型信息
paths./api/v1/ai/model/{modelId}.get.description=返回特定模型信息。
paths./api/v1/ai/model/{modelId}.get.parameters.[0].description=模型标识
paths./api/v1/ai/apikeys/{provider}.get.summary=列举模型服务的所有凭证
paths./api/v1/ai/apikeys/{provider}.get.description=列举模型服务的所有凭证信息。
paths./api/v1/ai/apikeys/{provider}.get.parameters.[0].description=模型提供商
paths./api/v1/ai/apikey/{id}.get.summary=获取模型服务凭证
paths./api/v1/ai/apikey/{id}.get.description=获取模型服务的调用凭证信息。
paths./api/v1/ai/apikey/{id}.get.parameters.[0].description=凭证标识符
paths./api/v1/ai/apikey/{id}.delete.summary=删除模型服务凭证
paths./api/v1/ai/apikey/{id}.delete.description=删除模型服务的凭证信息。
paths./api/v1/ai/apikey/{id}.delete.parameters.[0].description=凭证标识符
paths./api/v1/admin/users.get.summary=获取所有用户信息
paths./api/v1/admin/users.get.description=返回所有用户信息。
paths./api/v1/admin/users/{pageSize}.get.summary=按限制获取用户信息
paths./api/v1/admin/users/{pageSize}.get.description=返回用户信息，最多返回 pageSize 个用户信息。
paths./api/v1/admin/users/{pageSize}.get.parameters.[0].description=最大数量
paths./api/v1/admin/users/{pageSize}/{pageNum}.get.summary=按页获取用户信息
paths./api/v1/admin/users/{pageSize}/{pageNum}.get.description=分页返回用户信息，返回第 pageNum 页，最多 pageSize 个用户信息。
paths./api/v1/admin/users/{pageSize}/{pageNum}.get.parameters.[0].description=最大数量
paths./api/v1/admin/users/{pageSize}/{pageNum}.get.parameters.[1].description=当前页数
paths./api/v1/admin/user/{username}.get.summary=获取用户详细信息
paths./api/v1/admin/user/{username}.get.description=返回详细用户信息。
paths./api/v1/admin/user/{username}.get.parameters.[0].description=用户名
paths./api/v1/admin/user/{username}.delete.summary=删除用户
paths./api/v1/admin/user/{username}.delete.description=根据用户名删除用户。
paths./api/v1/admin/user/{username}.delete.parameters.[0].description=用户名
paths./api/v1/admin/tokenBy/{token}.get.summary=获取 API Token 对应的用户
paths./api/v1/admin/tokenBy/{token}.get.description=获取 API Token 对应的用户详细信息。
paths./api/v1/admin/tokenBy/{token}.get.parameters.[0].description=API Token
paths./api/v1/admin/token/{username}.get.summary=获取用户的 API Token
paths./api/v1/admin/token/{username}.get.description=获取用户的 API Token 列表。
paths./api/v1/admin/token/{username}.get.parameters.[0].description=用户名
paths./api/v1/admin/encryption/encrypt/{text}.get.summary=加密文本
paths./api/v1/admin/encryption/encrypt/{text}.get.description=用内置密钥加密一段文本。
paths./api/v1/admin/encryption/encrypt/{text}.get.parameters.[0].description=需要加密的文本
paths./api/v1/admin/app/meta.get.summary=获取应用信息
paths./api/v1/admin/app/meta.get.description=获取应用信息，用于精确定位对应的工程版本。
paths./api/v1/admin/app/expose.get.summary=暴露 DTO 定义
paths./api/v1/admin/app/expose.get.description=本方法不做任何事情。
paths./api/v1/admin/app/config/{name}.get.summary=获取配置
paths./api/v1/admin/app/config/{name}.get.description=根据名称获取应用最新的配置信息。
paths./api/v1/admin/app/config/{name}.get.parameters.[0].description=配置名称
paths./api/v1/admin/app/config/{name}/{version}.get.summary=获取应用指定版本的配置
paths./api/v1/admin/app/config/{name}/{version}.get.description=根据名称和版本获取应用的配置信息。
paths./api/v1/admin/app/config/{name}/{version}.get.parameters.[0].description=配置名称
paths./api/v1/admin/app/config/{name}/{version}.get.parameters.[1].description=配置版本
paths./api/v1/account/tokens.get.summary=列出 tokens
paths./api/v1/account/tokens.get.description=列出当前有效 tokens。
paths./api/v1/account/basic/{username}.get.summary=获取用户基本信息
paths./api/v1/account/basic/{username}.get.description=返回用户基本信息，包括：用户名、昵称、头像链接。
paths./api/v1/account/basic/{username}.get.parameters.[0].description=用户名
paths./api/v1/flow/batch/delete.delete.summary=批量删除 flows
paths./api/v1/flow/batch/delete.delete.description=删除多个 flows。保证事务性，返回删除成功的 flowId 列表。
paths./api/v1/flow/batch/delete.delete.requestBody.description=待删除的 flowId 列表
paths./api/v1/biz/admin/ai/model/{modelId}.delete.summary=删除模型信息
paths./api/v1/biz/admin/ai/model/{modelId}.delete.description=根据 modelId 删除模型信息。
paths./api/v1/biz/admin/ai/model/{modelId}.delete.parameters.[0].description=模型标识
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.get.summary=获取统计量
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.get.description=获取相应资源的相应指标的统计量。
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.get.parameters.[0].description=资源类型：prompt | flow | plugin
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.get.parameters.[1].description=资源唯一标识
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.get.parameters.[2].description=统计类型：view_count | refer_count | recommend_count | score
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.post.summary=增长统计量
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.post.description=相应资源的相应指标的统计量加一。返回最新的统计量。
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.post.parameters.[0].description=资源类型：prompt | flow | plugin
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.post.parameters.[1].description=资源唯一标识
paths./api/v1/stats/{infoType}/{infoId}/{statsType}.post.parameters.[2].description=统计类型：view_count | refer_count | recommend_count | score
paths./api/v1/stats/{infoType}/{infoId}/{statsType}/{delta}.post.summary=增加统计量
paths./api/v1/stats/{infoType}/{infoId}/{statsType}/{delta}.post.description=增加相应资源的相应指标的统计量，增量可以为负数。返回最新的统计量。
paths./api/v1/stats/{infoType}/{infoId}/{statsType}/{delta}.post.parameters.[0].description=资源类型：prompt | flow | plugin
paths./api/v1/stats/{infoType}/{infoId}/{statsType}/{delta}.post.parameters.[1].description=资源唯一标识
paths./api/v1/stats/{infoType}/{infoId}/{statsType}/{delta}.post.parameters.[2].description=统计类型：view_count | refer_count | recommend_count | score
paths./api/v1/stats/{infoType}/{infoId}/{statsType}/{delta}.post.parameters.[3].description=统计值变化量
paths./api/v1/stats/{infoType}/{infoId}.get.summary=获取全部统计量
paths./api/v1/stats/{infoType}/{infoId}.get.description=获取相应资源的全部统计量。
paths./api/v1/stats/{infoType}/{infoId}.get.parameters.[0].description=资源类型：prompt | flow | plugin
paths./api/v1/stats/{infoType}/{infoId}.get.parameters.[1].description=资源唯一标识
paths./api/v1/stats/prompts/by/{statsType}/{pageSize}/{pageNum}.get.summary=根据统计量列出 prompts
paths./api/v1/stats/prompts/by/{statsType}/{pageSize}/{pageNum}.get.description=根据统计量列出 prompts，包含交互统计数据。
paths./api/v1/stats/prompts/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[0].description=统计类型：view_count | refer_count | recommend_count | score
paths./api/v1/stats/prompts/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[1].description=最大数量
paths./api/v1/stats/prompts/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[2].description=当前页数
paths./api/v1/stats/prompts/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[3].description=默认为倒序，设置 asc=1 则正序排列
paths./api/v1/stats/plugins/by/{statsType}/{pageSize}/{pageNum}.get.summary=根据统计量列出 plugins
paths./api/v1/stats/plugins/by/{statsType}/{pageSize}/{pageNum}.get.description=根据统计量列出 plugins，包含交互统计数据。
paths./api/v1/stats/plugins/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[0].description=统计类型：view_count | refer_count | recommend_count | score
paths./api/v1/stats/plugins/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[1].description=最大数量
paths./api/v1/stats/plugins/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[2].description=当前页数
paths./api/v1/stats/plugins/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[3].description=默认为倒序，设置 asc=1 则正序排列
paths./api/v1/stats/flows/by/{statsType}/{pageSize}/{pageNum}.get.summary=根据统计量列出 flows
paths./api/v1/stats/flows/by/{statsType}/{pageSize}/{pageNum}.get.description=根据统计量列出 flows，包含交互统计数据。
paths./api/v1/stats/flows/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[0].description=统计类型：view_count | refer_count | recommend_count | score
paths./api/v1/stats/flows/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[1].description=最大数量
paths./api/v1/stats/flows/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[2].description=当前页数
paths./api/v1/stats/flows/by/{statsType}/{pageSize}/{pageNum}.get.parameters.[3].description=默认为倒序，设置 asc=1 则正序排列
paths./api/v1/score/{infoType}/{infoId}.get.summary=获取资源的打分
paths./api/v1/score/{infoType}/{infoId}.get.description=获取当前用户对相应资源的打分。
paths./api/v1/score/{infoType}/{infoId}.get.parameters.[0].description=资源类型：prompt | flow | plugin
paths./api/v1/score/{infoType}/{infoId}.get.parameters.[1].description=资源唯一标识

components.schemas.ChatFunctionCallDTO.description=对话过程中的方法调用信息
components.schemas.ChatFunctionCallDTO.properties.name.description=方法名称
components.schemas.ChatFunctionCallDTO.properties.arguments.description=方法参数
components.schemas.ChatMessageDTO.description=对话消息
components.schemas.ChatMessageDTO.properties.role.description=对话角色：system | assistant | user | tool_call | tool_result
components.schemas.ChatMessageDTO.properties.name.description=user: 用户角色的名字；tool_call: 被调用的工具名称
components.schemas.ChatMessageDTO.properties.content.description=默认: 对话内容；tool_result: tool 调用结果，序列化为 json
components.schemas.ChatPromptContentDTO.description=对话型 prompt 模版内容
components.schemas.ChatPromptContentDTO.properties.system.description=Prompt 系统设定模版
components.schemas.ChatPromptContentDTO.properties.messages.description=Prompt 中预置的聊天记录
components.schemas.PromptUpdateDTO.description=更新 Prompt 信息的请求数据
components.schemas.PromptUpdateDTO.properties.parentId.description=被引用的 prompt
components.schemas.PromptUpdateDTO.properties.visibility.description=可见性：private（默认）, public, public_org, hidden
components.schemas.PromptUpdateDTO.properties.name.description=Prompt 名称
components.schemas.PromptUpdateDTO.properties.description.description=Prompt 描述
components.schemas.PromptUpdateDTO.properties.template.description=Prompt 文本模版内容，与 chatTemplate 字段二选一，优先级：template > chatTemplate
components.schemas.PromptUpdateDTO.properties.format.description=Prompt 格式：mustache（默认） | f_string
components.schemas.PromptUpdateDTO.properties.lang.description=Prompt 语言：en（默认） | zh_CN | ...
components.schemas.PromptUpdateDTO.properties.example.description=Prompt 示例
components.schemas.PromptUpdateDTO.properties.inputs.description=Prompt 参数，JSON 格式
components.schemas.PromptUpdateDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.PromptUpdateDTO.properties.draft.description=草稿内容
components.schemas.PromptUpdateDTO.properties.tags.description=标签集
components.schemas.PromptUpdateDTO.properties.tags.items.description=标签集
components.schemas.PromptUpdateDTO.properties.aiModels.description=支持的模型集
components.schemas.PromptUpdateDTO.properties.aiModels.items.description=支持的模型集，为空表示不限模型
components.schemas.PluginUpdateDTO.description=更新 Plugin 信息的请求数据
components.schemas.PluginUpdateDTO.properties.visibility.description=可见性：private（默认）, public, public_org, hidden
components.schemas.PluginUpdateDTO.properties.name.description=Plugin 名称
components.schemas.PluginUpdateDTO.properties.manifestFormat.description=Manifest 格式，当前支持：dash_scope（默认），open_ai
components.schemas.PluginUpdateDTO.properties.manifestInfo.description=Manifest 内容，可以是完整内容或者一个 URL
components.schemas.PluginUpdateDTO.properties.apiFormat.description=API 描述格式，当前支持：openapi_v3（默认）
components.schemas.PluginUpdateDTO.properties.apiInfo.description=API 描述内容，可以是完整内容或者一个 URL
components.schemas.PluginUpdateDTO.properties.provider.description=提供者的信息，默认为当前用户的用户名
components.schemas.PluginUpdateDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.PluginUpdateDTO.properties.tags.description=标签集
components.schemas.PluginUpdateDTO.properties.tags.items.description=标签集
components.schemas.PluginUpdateDTO.properties.aiModels.description=支持的模型集，为空表示不限模型
components.schemas.PluginUpdateDTO.properties.aiModels.items.description=支持的模型集，为空表示不限模型
components.schemas.FlowUpdateDTO.description=更新 Flow 信息的请求数据
components.schemas.FlowUpdateDTO.properties.parentId.description=被引用的 flow
components.schemas.FlowUpdateDTO.properties.visibility.description=可见性： private（默认）, public, public_org, hidden
components.schemas.FlowUpdateDTO.properties.format.description=Flow 格式，当前支持：langflow
components.schemas.FlowUpdateDTO.properties.name.description=Flow 名称
components.schemas.FlowUpdateDTO.properties.description.description=Flow 描述
components.schemas.FlowUpdateDTO.properties.config.description=Flow 配置
components.schemas.FlowUpdateDTO.properties.example.description=Flow 示例
components.schemas.FlowUpdateDTO.properties.parameters.description=Flow 参数，JSON 格式
components.schemas.FlowUpdateDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.FlowUpdateDTO.properties.draft.description=草稿内容
components.schemas.FlowUpdateDTO.properties.tags.description=标签集
components.schemas.FlowUpdateDTO.properties.tags.items.description=标签集
components.schemas.FlowUpdateDTO.properties.aiModels.description=支持的模型集，为空表示不限模型
components.schemas.FlowUpdateDTO.properties.aiModels.items.description=支持的模型集，为空表示不限模型
components.schemas.AiModelInfoUpdateDTO.description=新建/更新模型信息的请求数据
components.schemas.AiModelInfoUpdateDTO.properties.name.description=模型名称
components.schemas.AiModelInfoUpdateDTO.properties.description.description=模型描述
components.schemas.AiModelInfoUpdateDTO.properties.provider.description=模型服务提供者：hugging_face | open_ai | local_ai | in_process | dash_scope | unknown
components.schemas.AiModelInfoUpdateDTO.properties.type.description=模型类型：text2text | text2chat | text2image | embedding | moderation
components.schemas.UserFullDetailsDTO.description=账号详细信息（含密码）
components.schemas.UserFullDetailsDTO.properties.requestId.description=追踪标识
components.schemas.UserDetailsDTO.description=账号详细信息
components.schemas.UserDetailsDTO.properties.requestId.description=追踪标识
components.schemas.PromptCreateDTO.description=新建 Prompt 信息的请求数据
components.schemas.PromptCreateDTO.properties.parentId.description=被引用的 prompt
components.schemas.PromptCreateDTO.properties.visibility.description=可见性：private（默认）, public, public_org, hidden
components.schemas.PromptCreateDTO.properties.name.description=Prompt 名称
components.schemas.PromptCreateDTO.properties.description.description=Prompt 描述
components.schemas.PromptCreateDTO.properties.template.description=Prompt 文本模版内容，与 chatTemplate 字段二选一，优先级：template > chatTemplate
components.schemas.PromptCreateDTO.properties.format.description=Prompt 格式：mustache（默认） | f_string
components.schemas.PromptCreateDTO.properties.lang.description=Prompt 语言：en（默认） | zh_CN | ...
components.schemas.PromptCreateDTO.properties.example.description=Prompt 示例
components.schemas.PromptCreateDTO.properties.inputs.description=Prompt 参数，JSON 格式
components.schemas.PromptCreateDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.PromptCreateDTO.properties.draft.description=草稿内容
components.schemas.PromptCreateDTO.properties.tags.description=Prompt 所属用户
components.schemas.PromptCreateDTO.properties.tags.items.description=Prompt 所属用户
components.schemas.PromptCreateDTO.properties.aiModels.description=支持的模型集
components.schemas.PromptCreateDTO.properties.aiModels.items.description=支持的模型集
components.schemas.InteractiveStatsDTO.description=交互统计信息
components.schemas.InteractiveStatsDTO.properties.requestId.description=追踪标识
components.schemas.InteractiveStatsDTO.properties.gmtCreate.description=创建时间
components.schemas.InteractiveStatsDTO.properties.gmtModified.description=修改时间
components.schemas.InteractiveStatsDTO.properties.referType.description=资源类型
components.schemas.InteractiveStatsDTO.properties.referId.description=资源标识
components.schemas.InteractiveStatsDTO.properties.viewCount.description=查看数量
components.schemas.InteractiveStatsDTO.properties.referCount.description=引用数量
components.schemas.InteractiveStatsDTO.properties.recommendCount.description=推荐数量
components.schemas.InteractiveStatsDTO.properties.scoreCount.description=评分数量
components.schemas.InteractiveStatsDTO.properties.score.description=平均分
components.schemas.PromptItemForNameDTO.description=Prompt 标识和版本信息
components.schemas.PromptItemForNameDTO.properties.promptId.description=promptId
components.schemas.PromptItemForNameDTO.properties.version.description=version
components.schemas.PromptAiParamDTO.description=Prompt 服务信息
components.schemas.PromptAiParamDTO.properties.prompt.description=完整输入内容，优先级：prompt > promptTemplate > promptRef
components.schemas.PromptAiParamDTO.properties.stream.description=是否采用流式输出
components.schemas.PromptAiParamDTO.properties.params.description=模型调用参数，实际支持的字段与 modelId 有关，取决于 model provider，具体字段可参考：OpenAiParamDTO, QwenParamDTO
components.schemas.PromptAiParamDTO.properties.params.additionalProperties.description=模型调用参数，实际支持的字段与 modelId 有关，取决于 model provider，具体字段可参考：OpenAiParamDTO, QwenParamDTO
components.schemas.PromptRefDTO.description=Prompt 引用信息
components.schemas.PromptRefDTO.properties.promptId.description=Prompt 标识符
components.schemas.PromptRefDTO.properties.variables.description=应用于模版的参数内容，可为空
components.schemas.PromptRefDTO.properties.variables.additionalProperties.description=应用于模版的参数内容，可为空
components.schemas.PromptRefDTO.properties.draft.description=是否采用草稿内容
components.schemas.PromptTemplateDTO.description=Prompt 模版内容
components.schemas.PromptTemplateDTO.properties.template.description=Prompt 文本模版内容，与 chatTemplate 字段二选一，优先级：template > chatTemplate
components.schemas.PromptTemplateDTO.properties.variables.description=应用于模版的参数内容，可为空
components.schemas.PromptTemplateDTO.properties.variables.additionalProperties.description=应用于模版的参数内容，可为空
components.schemas.PromptTemplateDTO.properties.format.description=Prompt 格式：mustache（默认） | f_string
components.schemas.PromptQueryDTO.description=Prompt 模版查询请求
components.schemas.PromptQueryDTO.properties.orderBy.description=排序条件，支持的排序字段为：\n- version\n- modifyTime\n- createTime\n\n排序优先级按列表顺序，默认降序，如果期望升序，需要在字段后指定，如：orderBy: [\\"score\\", \\"scoreCount asc\\"] （scoreCount 按升序）\n
components.schemas.PromptQueryDTO.properties.orderBy.items.description=排序条件，支持的排序字段为：\n- version\n- modifyTime\n- createTime\n\n排序优先级按列表顺序，默认降序，如果期望升序，需要在字段后指定，如：orderBy: [\\"score\\", \\"scoreCount asc\\"] （scoreCount 按升序）\n
components.schemas.PromptQueryDTO.properties.pageNum.description=页码，默认为 0
components.schemas.PromptQueryDTO.properties.pageSize.description=页条目数，1～50，默认为 10
components.schemas.Where.description=查询条件
components.schemas.Where.properties.visibility.description=可见性：public, public_org（搜索本组织）, private（默认）
components.schemas.Where.properties.username.description=在搜索 public, public_org 的 prompt 时有效，不指定则搜索全部用户
components.schemas.Where.properties.tags.description=标签
components.schemas.Where.properties.tags.items.description=标签
components.schemas.Where.properties.tagsOp.description=标签间的关系：and | or（默认）
components.schemas.Where.properties.aiModels.description=模型集
components.schemas.Where.properties.aiModels.items.description=模型集
components.schemas.Where.properties.aiModelsOp.description=模型集间的关系：and | or（默认）
components.schemas.Where.properties.name.description=标题，左匹配
components.schemas.Where.properties.type.description=类型，精确匹配：string（默认） | chat
components.schemas.Where.properties.lang.description=语种，精确匹配
components.schemas.Where.properties.text.description=标题、描述、模版、示例，模糊匹配，其一命中即可；public 范围 + 全部用户的通用搜索不保证实时性
components.schemas.AiModelInfoDTO.description=模型信息
components.schemas.AiModelInfoDTO.properties.requestId.description=追踪标识
components.schemas.AiModelInfoDTO.properties.modelId.description=模型标识：[provider]name
components.schemas.AiModelInfoDTO.properties.name.description=模型名称
components.schemas.AiModelInfoDTO.properties.description.description=模型描述
components.schemas.AiModelInfoDTO.properties.provider.description=模型服务提供者：hugging_face | open_ai | local_ai | in_process | dash_scope | unknown
components.schemas.AiModelInfoDTO.properties.type.description=模型类型：text2text | text2chat | text2image | embedding | moderation
components.schemas.PromptSummaryDTO.description=Prompt 模版摘要内容
components.schemas.PromptSummaryDTO.properties.requestId.description=追踪标识
components.schemas.PromptSummaryDTO.properties.promptId.description=Prompt 标识符
components.schemas.PromptSummaryDTO.properties.gmtCreate.description=创建时间
components.schemas.PromptSummaryDTO.properties.gmtModified.description=修改时间
components.schemas.PromptSummaryDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.PromptSummaryDTO.properties.version.description=版本
components.schemas.PromptSummaryDTO.properties.name.description=Prompt 名称
components.schemas.PromptSummaryDTO.properties.type.description=Prompt 类型：string | chat
components.schemas.PromptSummaryDTO.properties.description.description=Prompt 描述（50 个字符，超出部分用省略号表示）
components.schemas.PromptSummaryDTO.properties.format.description=Prompt 格式：mustache（默认） | f_string
components.schemas.PromptSummaryDTO.properties.lang.description=Prompt 语言：en（默认） | zh_CN | ...
components.schemas.PromptSummaryDTO.properties.username.description=Prompt 所属用户
components.schemas.PromptSummaryDTO.properties.tags.description=标签集
components.schemas.PromptSummaryDTO.properties.tags.items.description=标签集
components.schemas.PromptSummaryDTO.properties.aiModels.description=支持的模型集
components.schemas.PromptDetailsDTO.description=Prompt 模版详细内容
components.schemas.PromptDetailsDTO.properties.requestId.description=追踪标识
components.schemas.PromptDetailsDTO.properties.promptId.description=Prompt 标识符
components.schemas.PromptDetailsDTO.properties.gmtCreate.description=创建时间
components.schemas.PromptDetailsDTO.properties.gmtModified.description=修改时间
components.schemas.PromptDetailsDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.PromptDetailsDTO.properties.version.description=版本
components.schemas.PromptDetailsDTO.properties.name.description=Prompt 名称
components.schemas.PromptDetailsDTO.properties.type.description=Prompt 类型：string | chat
components.schemas.PromptDetailsDTO.properties.description.description=Prompt 描述（50 个字符，超出部分用省略号表示）
components.schemas.PromptDetailsDTO.properties.format.description=Prompt 格式：mustache（默认） | f_string
components.schemas.PromptDetailsDTO.properties.lang.description=Prompt 语言：en（默认） | zh_CN | ...
components.schemas.PromptDetailsDTO.properties.username.description=Prompt 所属用户
components.schemas.PromptDetailsDTO.properties.tags.description=标签集
components.schemas.PromptDetailsDTO.properties.tags.items.description=标签集
components.schemas.PromptDetailsDTO.properties.aiModels.description=支持的模型集
components.schemas.PromptDetailsDTO.properties.template.description=Prompt 文本模版内容
components.schemas.PromptDetailsDTO.properties.example.description=Prompt 示例
components.schemas.PromptDetailsDTO.properties.inputs.description=Prompt 参数，JSON 格式
components.schemas.PromptDetailsDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.PromptDetailsDTO.properties.draft.description=草稿内容
components.schemas.PluginCreateDTO.description=新建 Plugin 信息的请求数据
components.schemas.PluginCreateDTO.properties.visibility.description=可见性：private（默认）, public, public_org, hidden
components.schemas.PluginCreateDTO.properties.name.description=Plugin 名称
components.schemas.PluginCreateDTO.properties.manifestFormat.description=Manifest 格式，当前支持：dash_scope（默认），open_ai
components.schemas.PluginCreateDTO.properties.manifestInfo.description=Manifest 内容，可以是完整内容或者一个 URL
components.schemas.PluginCreateDTO.properties.apiFormat.description=API 描述格式，当前支持：openapi_v3（默认）
components.schemas.PluginCreateDTO.properties.apiInfo.description=API 描述内容，可以是完整内容或者一个 URL
components.schemas.PluginCreateDTO.properties.provider.description=提供者的信息，默认为当前用户的用户名
components.schemas.PluginCreateDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.PluginCreateDTO.properties.tags.description=标签集
components.schemas.PluginCreateDTO.properties.tags.items.description=标签集
components.schemas.PluginCreateDTO.properties.aiModels.description=支持的模型集，为空表示不限模型
components.schemas.PluginCreateDTO.properties.aiModels.items.description=支持的模型集，为空表示不限模型
components.schemas.PluginQueryDTO.description=Plugin 信息查询请求
components.schemas.PluginQueryDTO.properties.orderBy.description=排序条件，支持的排序字段为：\n- modifyTime\n- createTime\n\n排序优先级按列表顺序，默认降序，如果期望升序，需要在字段后指定，如：orderBy: [\\"score\\", \\"scoreCount asc\\"] （scoreCount 按升序）\n
components.schemas.PluginQueryDTO.properties.orderBy.items.description=排序条件，支持的排序字段为：\n- modifyTime\n- createTime\n\n排序优先级按列表顺序，默认降序，如果期望升序，需要在字段后指定，如：orderBy: [\\"score\\", \\"scoreCount asc\\"] （scoreCount 按升序）\n
components.schemas.PluginQueryDTO.properties.pageNum.description=页码，默认为 0
components.schemas.PluginQueryDTO.properties.pageSize.description=页条目数，1～50，默认为 10
components.schemas.PluginSummaryDTO.description=Plugin 信息摘要内容
components.schemas.PluginSummaryDTO.properties.requestId.description=追踪标识
components.schemas.PluginSummaryDTO.properties.pluginId.description=Plugin 标识符
components.schemas.PluginSummaryDTO.properties.gmtCreate.description=创建时间
components.schemas.PluginSummaryDTO.properties.gmtModified.description=修改时间
components.schemas.PluginSummaryDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.PluginSummaryDTO.properties.name.description=Plugin 名称
components.schemas.PluginSummaryDTO.properties.provider.description=提供者的信息
components.schemas.PluginSummaryDTO.properties.manifestFormat.description=Manifest 格式，当前支持：dash_scope, open_ai
components.schemas.PluginSummaryDTO.properties.apiFormat.description=API 描述格式，当前支持：openapi_v3
components.schemas.PluginSummaryDTO.properties.username.description=Plugin 所属用户
components.schemas.PluginSummaryDTO.properties.tags.description=标签集
components.schemas.PluginSummaryDTO.properties.tags.items.description=标签集
components.schemas.PluginSummaryDTO.properties.aiModels.description=支持的模型集
components.schemas.PluginDetailsDTO.description=Plugin 信息详细内容
components.schemas.PluginDetailsDTO.properties.requestId.description=追踪标识
components.schemas.PluginDetailsDTO.properties.pluginId.description=Plugin 标识符
components.schemas.PluginDetailsDTO.properties.gmtCreate.description=创建时间
components.schemas.PluginDetailsDTO.properties.gmtModified.description=修改时间
components.schemas.PluginDetailsDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.PluginDetailsDTO.properties.name.description=Plugin 名称
components.schemas.PluginDetailsDTO.properties.provider.description=提供者的信息
components.schemas.PluginDetailsDTO.properties.manifestFormat.description=Manifest 格式，当前支持：dash_scope, open_ai
components.schemas.PluginDetailsDTO.properties.apiFormat.description=API 描述格式，当前支持：openapi_v3
components.schemas.PluginDetailsDTO.properties.username.description=所属用户
components.schemas.PluginDetailsDTO.properties.tags.description=标签集
components.schemas.PluginDetailsDTO.properties.tags.items.description=标签集
components.schemas.PluginDetailsDTO.properties.aiModels.description=支持的模型集
components.schemas.PluginDetailsDTO.properties.manifestInfo.description=Manifest 内容，不同的格式可能存在差异
components.schemas.PluginDetailsDTO.properties.apiInfo.description=API 描述内容，不同的格式可能存在内容差异
components.schemas.PluginDetailsDTO.properties.functionFormat.description=Function 描述格式，当前支持：open_ai
components.schemas.PluginDetailsDTO.properties.toolSpecPair.description=Function 描述内容
components.schemas.PluginDetailsDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.FlowCreateDTO.description=新建 Flow 信息的请求数据
components.schemas.FlowCreateDTO.properties.parentId.description=被引用的 flow
components.schemas.FlowCreateDTO.properties.visibility.description=可见性： private（默认）, public, public_org, hidden
components.schemas.FlowCreateDTO.properties.format.description=Flow 格式，当前支持：langflow
components.schemas.FlowCreateDTO.properties.name.description=Flow 名称
components.schemas.FlowCreateDTO.properties.description.description=Flow 描述
components.schemas.FlowCreateDTO.properties.config.description=Flow 配置
components.schemas.FlowCreateDTO.properties.example.description=Flow 示例
components.schemas.FlowCreateDTO.properties.parameters.description=Flow 参数，JSON 格式
components.schemas.FlowCreateDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.FlowCreateDTO.properties.draft.description=草稿内容
components.schemas.FlowCreateDTO.properties.tags.description=标签集
components.schemas.FlowCreateDTO.properties.tags.items.description=标签集
components.schemas.FlowCreateDTO.properties.aiModels.description=支持的模型集
components.schemas.FlowCreateDTO.properties.aiModels.items.description=支持的模型集
components.schemas.FlowItemForNameDTO.description=Flow 标识和版本信息
components.schemas.FlowItemForNameDTO.properties.flowId.description=flowId
components.schemas.FlowItemForNameDTO.properties.version.description=version
components.schemas.FlowQueryDTO.description=Flow 信息查询请求
components.schemas.FlowQueryDTO.properties.orderBy.description=排序条件，支持的排序字段为：\n- version\n- modifyTime\n- createTime\n\n排序优先级按列表顺序，默认降序，如果期望升序，需要在字段后指定，如：orderBy: [\\"score\\", \\"scoreCount asc\\"] （scoreCount 按升序）\n
components.schemas.FlowQueryDTO.properties.orderBy.items.description=排序条件，支持的排序字段为：\n- version\n- modifyTime\n- createTime\n\n排序优先级按列表顺序，默认降序，如果期望升序，需要在字段后指定，如：orderBy: [\\"score\\", \\"scoreCount asc\\"] （scoreCount 按升序）\n
components.schemas.FlowQueryDTO.properties.pageNum.description=页码，默认为 0
components.schemas.FlowQueryDTO.properties.pageSize.description=页条目数，1～50，默认为 10
components.schemas.FlowSummaryDTO.description=Flow 信息摘要内容
components.schemas.FlowSummaryDTO.properties.requestId.description=追踪标识
components.schemas.FlowSummaryDTO.properties.flowId.description=Flow 标识符
components.schemas.FlowSummaryDTO.properties.gmtCreate.description=创建时间
components.schemas.FlowSummaryDTO.properties.gmtModified.description=修改时间
components.schemas.FlowSummaryDTO.properties.parentId.description=被引用的 flow
components.schemas.FlowSummaryDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.FlowSummaryDTO.properties.format.description=Flow 格式，当前支持：langflow
components.schemas.FlowSummaryDTO.properties.version.description=版本
components.schemas.FlowSummaryDTO.properties.name.description=Flow 名称
components.schemas.FlowSummaryDTO.properties.description.description=Flow 描述
components.schemas.FlowSummaryDTO.properties.username.description=所属用户
components.schemas.FlowSummaryDTO.properties.tags.description=标签集
components.schemas.FlowSummaryDTO.properties.tags.items.description=标签集
components.schemas.FlowSummaryDTO.properties.aiModels.description=支持的模型集
components.schemas.FlowDetailsDTO.description=Flow 信息详细内容
components.schemas.FlowDetailsDTO.properties.requestId.description=追踪标识
components.schemas.FlowDetailsDTO.properties.flowId.description=Flow 标识符
components.schemas.FlowDetailsDTO.properties.gmtCreate.description=创建时间
components.schemas.FlowDetailsDTO.properties.gmtModified.description=修改时间
components.schemas.FlowDetailsDTO.properties.parentId.description=被引用的 flow
components.schemas.FlowDetailsDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.FlowDetailsDTO.properties.format.description=Flow 格式，当前支持：langflow
components.schemas.FlowDetailsDTO.properties.version.description=版本
components.schemas.FlowDetailsDTO.properties.name.description=Flow 名称
components.schemas.FlowDetailsDTO.properties.description.description=Flow 描述
components.schemas.FlowDetailsDTO.properties.username.description=所属用户
components.schemas.FlowDetailsDTO.properties.tags.description=标签集
components.schemas.FlowDetailsDTO.properties.tags.items.description=标签集
components.schemas.FlowDetailsDTO.properties.aiModels.description=支持的模型集
components.schemas.FlowDetailsDTO.properties.config.description=Flow 配置
components.schemas.FlowDetailsDTO.properties.example.description=Flow 示例
components.schemas.FlowDetailsDTO.properties.parameters.description=Flow 参数，JSON 格式
components.schemas.FlowDetailsDTO.properties.ext.description=额外信息，JSON 格式
components.schemas.FlowDetailsDTO.properties.draft.description=草稿内容
components.schemas.AiApiKeyCreateDTO.description=新增模型调用凭证信息的请求数据
components.schemas.AiApiKeyCreateDTO.properties.name.description=凭证名称
components.schemas.AiApiKeyCreateDTO.properties.provider.description=模型服务提供者：hugging_face | open_ai | local_ai | in_process | dash_scope | unknown
components.schemas.AiApiKeyCreateDTO.properties.token.description=凭证内容
components.schemas.AiApiKeyCreateDTO.properties.enabled.description=是否启用（默认启用）
components.schemas.AppConfigCreateDTO.description=配置创建信息
components.schemas.AppConfigCreateDTO.properties.name.description=配置名称
components.schemas.AppConfigCreateDTO.properties.format.description=配置格式：kv | json | yaml
components.schemas.AppConfigCreateDTO.properties.content.description=配置内容
components.schemas.AiApiKeyInfoDTO.description=模型调用凭证信息
components.schemas.AiApiKeyInfoDTO.properties.requestId.description=追踪标识
components.schemas.AiApiKeyInfoDTO.properties.id.description=凭证标识符
components.schemas.AiApiKeyInfoDTO.properties.gmtCreate.description=创建时间
components.schemas.AiApiKeyInfoDTO.properties.gmtModified.description=修改时间
components.schemas.AiApiKeyInfoDTO.properties.gmtUsed.description=最后使用时间
components.schemas.AiApiKeyInfoDTO.properties.name.description=凭证名称
components.schemas.AiApiKeyInfoDTO.properties.provider.description=模型服务提供者：hugging_face | open_ai | local_ai | in_process | dash_scope | unknown
components.schemas.AiApiKeyInfoDTO.properties.token.description=凭证内容
components.schemas.AiApiKeyInfoDTO.properties.enabled.description=是否启用
components.schemas.AiApiKeyInfoDTO.properties.username.description=所属用户
components.schemas.UserBasicInfoDTO.description=用户概要信息
components.schemas.UserBasicInfoDTO.properties.requestId.description=追踪标识
components.schemas.UserBasicInfoDTO.properties.username.description=用户名
components.schemas.UserBasicInfoDTO.properties.nickname.description=昵称
components.schemas.UserBasicInfoDTO.properties.picture.description=头像
components.schemas.AppMetaDTO.description=应用元信息
components.schemas.AppMetaDTO.properties.name.description=应用名称
components.schemas.AppMetaDTO.properties.version.description=应用版本
components.schemas.AppMetaDTO.properties.buildTimestamp.description=构建时间
components.schemas.AppMetaDTO.properties.buildNumber.description=构建版本号
components.schemas.AppMetaDTO.properties.commitUrl.description=提交地址
components.schemas.AppMetaDTO.properties.releaseNoteUrl.description=发布说明
components.schemas.AppMetaDTO.properties.runningEnv.description=运行环境
components.schemas.OpenAiParamDTO.description=OpenAI 系列模型参数
components.schemas.OpenAiParamDTO.properties.apiKey.description=API-KEY，优先级高于 apiKeyName。apiKey 和 apiKeyName 必须指定其一。
components.schemas.OpenAiParamDTO.properties.apiKeyName.description=API-KEY 名称
components.schemas.OpenAiParamDTO.properties.modelId.description=模型标识
components.schemas.OpenAiParamDTO.properties.baseUrl.description=OpenAI 服务提供地址，默认：https://api.openai.com/v1
components.schemas.OpenAiParamDTO.properties.temperature.description=用于调整随机从生成模型中抽样的程度，取值范围为 (0, 1.0)，温度为 0 将始终产生相同的输出。温度越高随机性越大。
components.schemas.OpenAiParamDTO.properties.topP.description=生成过程中核采样方法概率阈值，例如，取值为 0.8 时，仅保留概率加起来大于等于 0.8 的最可能 token 的最小集合作为候选集。取值范围为 (0, 1.0)，取值越大，生成的随机性越高；取值越低，生成的确定性越高。
components.schemas.OpenAiParamDTO.properties.maxTokens.description=模型生成的最大输出长度。
components.schemas.OpenAiParamDTO.properties.presencePenalty.description=存在惩罚，决定模型是否偏好新词语的参数，取值范围为 (-1.0, 1.0)。较高的存在惩罚值将使模型更倾向于生成新出现的词语，而不是重复已有的词语。
components.schemas.OpenAiParamDTO.properties.frequencyPenalty.description=频率惩罚，决定模型是否偏好常见词语的参数，取值范围为 (-1.0, 1.0)。较高的频率惩罚值将使模型更倾向于生成不常见的词语。
components.schemas.QwenParamDTO.description=千问系列模型参数
components.schemas.QwenParamDTO.properties.apiKey.description=API-KEY，优先级高于 apiKeyName。apiKey 和 apiKeyName 必须指定其一。
components.schemas.QwenParamDTO.properties.apiKeyName.description=API-KEY 名称
components.schemas.QwenParamDTO.properties.modelId.description=模型标识
components.schemas.QwenParamDTO.properties.topP.description=生成过程中核采样方法概率阈值，例如，取值为 0.8 时，仅保留概率加起来大于等于 0.8 的最可能 token 的最小集合作为候选集。取值范围为 (0, 1.0)，取值越大，生成的随机性越高；取值越低，生成的确定性越高。默认值为 0.5。
components.schemas.QwenParamDTO.properties.topK.description=生成时，采样候选集的大小。例如，取值为 50 时，仅将单次生成中得分最高的 50 个token组成随机采样的候选集。取值越大，生成的随机性越高；取值越小，生成的确定性越高。默认值为 0，表示不启用 top_k 策略，此时，仅有 top_p 策略生效。默认值为 0。
components.schemas.QwenParamDTO.properties.enableSearch.description=是否使用搜索引擎来做数据增强。默认 false。
components.schemas.QwenParamDTO.properties.seed.description=生成时，随机数的种子，用于控制模型生成的随机性。如果使用相同的种子，每次运行生成的结果都将相同；当需要复现模型的生成结果时，可以使用相同的种子。默认值为 1234。
components.schemas.LlmResultDTO.description=Prompt 服务结果
components.schemas.LlmResultDTO.properties.requestId.description=追踪标识
components.schemas.LlmResultDTO.properties.text.description=模型响应内容，非流式响应中包含完整内容；流式响应中仅包含的 delta 内容（流式响应的完整内容在最后一帧 message 字段的 content 中）
components.schemas.LlmResultDTO.properties.finishReason.description=模型结束原因: stop | length | tool_execution | content_filter
components.schemas.LlmTokenUsageDTO.description=Token 用量信息
components.schemas.LlmTokenUsageDTO.properties.inputTokenCount.description=输入 token 数
components.schemas.LlmTokenUsageDTO.properties.outputTokenCount.description=输出 token 数
components.schemas.LlmTokenUsageDTO.properties.totalTokenCount.description=总 token 数
components.schemas.AppConfigInfoDTO.description=配置信息
components.schemas.AppConfigInfoDTO.properties.requestId.description=追踪标识
components.schemas.AppConfigInfoDTO.properties.name.description=配置名称
components.schemas.AppConfigInfoDTO.properties.format.description=配置格式：kv | json | yaml
components.schemas.AppConfigInfoDTO.properties.content.description=配置内容
components.schemas.AppConfigInfoDTO.properties.version.description=配置版本
components.schemas.InteractiveStatsDTO.description=交互统计信息
components.schemas.InteractiveStatsDTO.properties.requestId.description=追踪标识
components.schemas.InteractiveStatsDTO.properties.gmtCreate.description=创建时间
components.schemas.InteractiveStatsDTO.properties.gmtModified.description=修改时间
components.schemas.InteractiveStatsDTO.properties.referType.description=资源类型
components.schemas.InteractiveStatsDTO.properties.referId.description=资源标识
components.schemas.InteractiveStatsDTO.properties.viewCount.description=查看数量
components.schemas.InteractiveStatsDTO.properties.referCount.description=引用数量
components.schemas.InteractiveStatsDTO.properties.recommendCount.description=推荐数量
components.schemas.InteractiveStatsDTO.properties.scoreCount.description=评分数量
components.schemas.InteractiveStatsDTO.properties.score.description=平均分
components.schemas.AiModelInfoDTO.description=模型信息
components.schemas.AiModelInfoDTO.properties.requestId.description=追踪标识
components.schemas.AiModelInfoDTO.properties.modelId.description=模型标识：[provider]name
components.schemas.AiModelInfoDTO.properties.name.description=模型名称
components.schemas.AiModelInfoDTO.properties.description.description=模型描述
components.schemas.AiModelInfoDTO.properties.provider.description=模型服务提供者：hugging_face | open_ai | local_ai | in_process | dash_scope | unknown
components.schemas.AiModelInfoDTO.properties.type.description=模型类型：text2text | text2chat | text2image | embedding | moderation
components.schemas.PromptSummaryStatsDTO.description=Prompt 模版摘要内容，含交互统计信息
components.schemas.PromptSummaryStatsDTO.properties.requestId.description=追踪标识
components.schemas.PromptSummaryStatsDTO.properties.promptId.description=Prompt 标识符
components.schemas.PromptSummaryStatsDTO.properties.gmtCreate.description=创建时间
components.schemas.PromptSummaryStatsDTO.properties.gmtModified.description=修改时间
components.schemas.PromptSummaryStatsDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.PromptSummaryStatsDTO.properties.version.description=版本
components.schemas.PromptSummaryStatsDTO.properties.name.description=Prompt 名称
components.schemas.PromptSummaryStatsDTO.properties.type.description=Prompt 类型：string | chat
components.schemas.PromptSummaryStatsDTO.properties.description.description=Prompt 描述（50 个字符，超出部分用省略号表示）
components.schemas.PromptSummaryStatsDTO.properties.format.description=Prompt 格式：mustache（默认） | f_string
components.schemas.PromptSummaryStatsDTO.properties.lang.description=Prompt 语言：en（默认） | zh_CN | ...
components.schemas.PromptSummaryStatsDTO.properties.username.description=Prompt 所属用户
components.schemas.PromptSummaryStatsDTO.properties.tags.description=标签集
components.schemas.PromptSummaryStatsDTO.properties.tags.items.description=标签集
components.schemas.PromptSummaryStatsDTO.properties.aiModels.description=支持的模型集
components.schemas.PromptSummaryStatsDTO.properties.viewCount.description=查看数量
components.schemas.PromptSummaryStatsDTO.properties.referCount.description=引用数量
components.schemas.PromptSummaryStatsDTO.properties.recommendCount.description=推荐数量
components.schemas.PromptSummaryStatsDTO.properties.scoreCount.description=评分数量
components.schemas.PromptSummaryStatsDTO.properties.score.description=平均分
components.schemas.PluginSummaryStatsDTO.description=Plugin 信息摘要内容，含交互统计信息
components.schemas.PluginSummaryStatsDTO.properties.requestId.description=追踪标识
components.schemas.PluginSummaryStatsDTO.properties.pluginId.description=Plugin 标识符
components.schemas.PluginSummaryStatsDTO.properties.gmtCreate.description=创建时间
components.schemas.PluginSummaryStatsDTO.properties.gmtModified.description=修改时间
components.schemas.PluginSummaryStatsDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.PluginSummaryStatsDTO.properties.name.description=Plugin 名称
components.schemas.PluginSummaryStatsDTO.properties.provider.description=提供者的信息
components.schemas.PluginSummaryStatsDTO.properties.manifestFormat.description=Manifest 格式，当前支持：dash_scope, open_ai
components.schemas.PluginSummaryStatsDTO.properties.apiFormat.description=API 描述格式，当前支持：openapi_v3
components.schemas.PluginSummaryStatsDTO.properties.username.description=所属用户
components.schemas.PluginSummaryStatsDTO.properties.tags.description=标签集
components.schemas.PluginSummaryStatsDTO.properties.tags.items.description=标签集
components.schemas.PluginSummaryStatsDTO.properties.aiModels.description=支持的模型集
components.schemas.PluginSummaryStatsDTO.properties.viewCount.description=查看数量
components.schemas.PluginSummaryStatsDTO.properties.referCount.description=引用数量
components.schemas.PluginSummaryStatsDTO.properties.recommendCount.description=推荐数量
components.schemas.PluginSummaryStatsDTO.properties.scoreCount.description=评分数量
components.schemas.PluginSummaryStatsDTO.properties.score.description=平均分
components.schemas.FlowSummaryStatsDTO.description=Flow 信息摘要内容，含交互统计信息
components.schemas.FlowSummaryStatsDTO.properties.requestId.description=追踪标识
components.schemas.FlowSummaryStatsDTO.properties.flowId.description=Flow 标识符
components.schemas.FlowSummaryStatsDTO.properties.gmtCreate.description=创建时间
components.schemas.FlowSummaryStatsDTO.properties.gmtModified.description=修改时间
components.schemas.FlowSummaryStatsDTO.properties.parentId.description=被引用的 flow
components.schemas.FlowSummaryStatsDTO.properties.visibility.description=可见性：private, public, public_org, hidden
components.schemas.FlowSummaryStatsDTO.properties.format.description=Flow 格式，当前支持：langflow
components.schemas.FlowSummaryStatsDTO.properties.version.description=版本
components.schemas.FlowSummaryStatsDTO.properties.name.description=Flow 名称
components.schemas.FlowSummaryStatsDTO.properties.description.description=Flow 描述
components.schemas.FlowSummaryStatsDTO.properties.username.description=所属用户
components.schemas.FlowSummaryStatsDTO.properties.tags.description=标签集
components.schemas.FlowSummaryStatsDTO.properties.tags.items.description=标签集
components.schemas.FlowSummaryStatsDTO.properties.aiModels.description=支持的模型集
components.schemas.FlowSummaryStatsDTO.properties.viewCount.description=查看数量
components.schemas.FlowSummaryStatsDTO.properties.referCount.description=引用数量
components.schemas.FlowSummaryStatsDTO.properties.recommendCount.description=推荐数量
components.schemas.FlowSummaryStatsDTO.properties.scoreCount.description=评分数量
components.schemas.FlowSummaryStatsDTO.properties.score.description=平均分
