package fun.freechat.api.dto;

import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;
import lombok.EqualsAndHashCode;

@Schema(description = "OpenAI series model parameters")
@Data
@EqualsAndHashCode(callSuper = true)
public class OpenAiParamDTO extends AiModelParamDTO{
    @Schema(description = "OpenAI service provider address, default: https://api.openai.com/v1")
    private String baseUrl;
    @Schema(description = "Used to adjust the degree of randomness from sampling in the generated model, the value range is (0, 1.0), a temperature of 0 will always produce the same output. The higher the temperature, the greater the randomness.")
    private Double temperature;
    @Schema(description = "Probability threshold of the nucleus sampling method in the generation process, for example, when the value is 0.8, only the smallest set of most likely tokens whose probabilities add up to 0.8 or more is retained as the candidate set. The value range is (0, 1.0), the larger the value, the higher the randomness of the generation; the smaller the value, the higher the certainty of the generation.")
    private Double topP;
    @Schema(description = "The maximum output length generated by the model.")
    private Integer maxTokens;
    @Schema(description = "Presence penalty, a parameter that determines whether the model prefers new words, the value range is (-1.0, 1.0). A higher presence penalty value will make the model more inclined to generate newly appearing words, rather than repeating existing words.")
    private Double presencePenalty;
    @Schema(description = "Frequency penalty, a parameter that determines whether the model prefers common words, the value range is (-1.0, 1.0). A higher frequency penalty value will make the model more inclined to generate uncommon words.")
    private Double frequencyPenalty;
}
