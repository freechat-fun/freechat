# coding: utf-8

"""
    FreeChat OpenAPI Definition

    https://github.com/freechat-fun/freechat

    The version of the OpenAPI document: 0.2.15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from freechat_sdk.models.prompt_details_dto import PromptDetailsDTO

class TestPromptDetailsDTO(unittest.TestCase):
    """PromptDetailsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PromptDetailsDTO:
        """Test PromptDetailsDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PromptDetailsDTO`
        """
        model = PromptDetailsDTO()
        if include_optional:
            return PromptDetailsDTO(
                request_id = '',
                prompt_id = '',
                gmt_create = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                gmt_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                visibility = '',
                version = 56,
                name = '',
                type = '',
                description = '',
                format = '',
                lang = '',
                username = '',
                tags = [
                    ''
                    ],
                ai_models = [
                    freechat_sdk.models.ai_model_info_dto.AiModelInfoDTO(
                        request_id = '', 
                        model_id = '', 
                        name = '', 
                        description = '', 
                        provider = '', 
                        type = '', )
                    ],
                template = '',
                chat_template = freechat_sdk.models.chat_prompt_content_dto.ChatPromptContentDTO(
                    system = '', 
                    message_to_send = freechat_sdk.models.chat_message_dto.ChatMessageDTO(
                        role = '', 
                        name = '', 
                        contents = [
                            freechat_sdk.models.chat_content_dto.ChatContentDTO(
                                type = '', 
                                content = '', 
                                mime_type = '', )
                            ], 
                        tool_calls = [
                            freechat_sdk.models.chat_tool_call_dto.ChatToolCallDTO(
                                id = '', 
                                name = '', 
                                arguments = '', )
                            ], 
                        gmt_create = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        context = '', ), 
                    messages = [
                        freechat_sdk.models.chat_message_dto.ChatMessageDTO(
                            role = '', 
                            name = '', 
                            gmt_create = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            context = '', )
                        ], ),
                example = '',
                inputs = '',
                ext = '',
                draft = ''
            )
        else:
            return PromptDetailsDTO(
        )
        """

    def testPromptDetailsDTO(self):
        """Test PromptDetailsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
