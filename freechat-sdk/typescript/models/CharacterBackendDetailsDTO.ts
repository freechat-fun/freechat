/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * OpenAPI spec version: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Character backend detailed information
*/
export class CharacterBackendDetailsDTO {
    /**
    * Request identifier
    */
    'requestId'?: string;
    /**
    * Character backend identifier
    */
    'backendId'?: string;
    /**
    * Creation time
    */
    'gmtCreate'?: Date;
    /**
    * Modification time
    */
    'gmtModified'?: Date;
    /**
    * Character identifier
    */
    'characterId'?: string;
    /**
    * Whether it is the default backend
    */
    'isDefault'?: boolean;
    /**
    * Prompt task identifier for greeting
    */
    'greetingPromptTaskId'?: string;
    /**
    * Prompt task identifier for experience
    */
    'experiencePromptTaskId'?: string;
    /**
    * Max messages in the character\'s memory
    */
    'messageWindowSize'?: number;
    /**
    * Whether to forward messages to the character owner
    */
    'forwardToUser'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "requestId",
            "baseName": "requestId",
            "type": "string",
            "format": ""
        },
        {
            "name": "backendId",
            "baseName": "backendId",
            "type": "string",
            "format": ""
        },
        {
            "name": "gmtCreate",
            "baseName": "gmtCreate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "gmtModified",
            "baseName": "gmtModified",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "characterId",
            "baseName": "characterId",
            "type": "string",
            "format": ""
        },
        {
            "name": "isDefault",
            "baseName": "isDefault",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "greetingPromptTaskId",
            "baseName": "greetingPromptTaskId",
            "type": "string",
            "format": ""
        },
        {
            "name": "experiencePromptTaskId",
            "baseName": "experiencePromptTaskId",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageWindowSize",
            "baseName": "messageWindowSize",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "forwardToUser",
            "baseName": "forwardToUser",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CharacterBackendDetailsDTO.attributeTypeMap;
    }

    public constructor() {
    }
}

