/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.freechat-sdk);
  }
}(this, function(expect, freechat-sdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new freechat-sdk.FlowApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FlowApi', function() {
    describe('batchSearchFlowDetails', function() {
      it('should call batchSearchFlowDetails successfully', function(done) {
        //uncomment below and update the code to test batchSearchFlowDetails
        //instance.batchSearchFlowDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchSearchFlowSummary', function() {
      it('should call batchSearchFlowSummary successfully', function(done) {
        //uncomment below and update the code to test batchSearchFlowSummary
        //instance.batchSearchFlowSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloneFlow', function() {
      it('should call cloneFlow successfully', function(done) {
        //uncomment below and update the code to test cloneFlow
        //instance.cloneFlow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloneFlows', function() {
      it('should call cloneFlows successfully', function(done) {
        //uncomment below and update the code to test cloneFlows
        //instance.cloneFlows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countFlows', function() {
      it('should call countFlows successfully', function(done) {
        //uncomment below and update the code to test countFlows
        //instance.countFlows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFlow', function() {
      it('should call createFlow successfully', function(done) {
        //uncomment below and update the code to test createFlow
        //instance.createFlow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFlows', function() {
      it('should call createFlows successfully', function(done) {
        //uncomment below and update the code to test createFlows
        //instance.createFlows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFlow', function() {
      it('should call deleteFlow successfully', function(done) {
        //uncomment below and update the code to test deleteFlow
        //instance.deleteFlow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFlows', function() {
      it('should call deleteFlows successfully', function(done) {
        //uncomment below and update the code to test deleteFlows
        //instance.deleteFlows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFlowDetails', function() {
      it('should call getFlowDetails successfully', function(done) {
        //uncomment below and update the code to test getFlowDetails
        //instance.getFlowDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFlowSummary', function() {
      it('should call getFlowSummary successfully', function(done) {
        //uncomment below and update the code to test getFlowSummary
        //instance.getFlowSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFlowVersionsByName', function() {
      it('should call listFlowVersionsByName successfully', function(done) {
        //uncomment below and update the code to test listFlowVersionsByName
        //instance.listFlowVersionsByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publishFlow', function() {
      it('should call publishFlow successfully', function(done) {
        //uncomment below and update the code to test publishFlow
        //instance.publishFlow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchFlowDetails', function() {
      it('should call searchFlowDetails successfully', function(done) {
        //uncomment below and update the code to test searchFlowDetails
        //instance.searchFlowDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchFlowSummary', function() {
      it('should call searchFlowSummary successfully', function(done) {
        //uncomment below and update the code to test searchFlowSummary
        //instance.searchFlowSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFlow', function() {
      it('should call updateFlow successfully', function(done) {
        //uncomment below and update the code to test updateFlow
        //instance.updateFlow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
