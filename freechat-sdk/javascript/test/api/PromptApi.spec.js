/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.freechat-sdk);
  }
}(this, function(expect, freechat-sdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new freechat-sdk.PromptApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PromptApi', function() {
    describe('applyStringPromptRef', function() {
      it('should call applyStringPromptRef successfully', function(done) {
        //uncomment below and update the code to test applyStringPromptRef
        //instance.applyStringPromptRef(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applyStringPromptTemplate', function() {
      it('should call applyStringPromptTemplate successfully', function(done) {
        //uncomment below and update the code to test applyStringPromptTemplate
        //instance.applyStringPromptTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchSearchPromptDetails', function() {
      it('should call batchSearchPromptDetails successfully', function(done) {
        //uncomment below and update the code to test batchSearchPromptDetails
        //instance.batchSearchPromptDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchSearchPromptSummary', function() {
      it('should call batchSearchPromptSummary successfully', function(done) {
        //uncomment below and update the code to test batchSearchPromptSummary
        //instance.batchSearchPromptSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clonePrompt', function() {
      it('should call clonePrompt successfully', function(done) {
        //uncomment below and update the code to test clonePrompt
        //instance.clonePrompt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clonePrompts', function() {
      it('should call clonePrompts successfully', function(done) {
        //uncomment below and update the code to test clonePrompts
        //instance.clonePrompts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countPrompts', function() {
      it('should call countPrompts successfully', function(done) {
        //uncomment below and update the code to test countPrompts
        //instance.countPrompts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPrompt', function() {
      it('should call createPrompt successfully', function(done) {
        //uncomment below and update the code to test createPrompt
        //instance.createPrompt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPrompts', function() {
      it('should call createPrompts successfully', function(done) {
        //uncomment below and update the code to test createPrompts
        //instance.createPrompts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePrompt', function() {
      it('should call deletePrompt successfully', function(done) {
        //uncomment below and update the code to test deletePrompt
        //instance.deletePrompt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePrompts', function() {
      it('should call deletePrompts successfully', function(done) {
        //uncomment below and update the code to test deletePrompts
        //instance.deletePrompts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPromptDetails', function() {
      it('should call getPromptDetails successfully', function(done) {
        //uncomment below and update the code to test getPromptDetails
        //instance.getPromptDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPromptSummary', function() {
      it('should call getPromptSummary successfully', function(done) {
        //uncomment below and update the code to test getPromptSummary
        //instance.getPromptSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPromptVersionsByName', function() {
      it('should call listPromptVersionsByName successfully', function(done) {
        //uncomment below and update the code to test listPromptVersionsByName
        //instance.listPromptVersionsByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publishPrompt', function() {
      it('should call publishPrompt successfully', function(done) {
        //uncomment below and update the code to test publishPrompt
        //instance.publishPrompt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchPromptDetails', function() {
      it('should call searchPromptDetails successfully', function(done) {
        //uncomment below and update the code to test searchPromptDetails
        //instance.searchPromptDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchPromptSummary', function() {
      it('should call searchPromptSummary successfully', function(done) {
        //uncomment below and update the code to test searchPromptSummary
        //instance.searchPromptSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendPrompt', function() {
      it('should call sendPrompt successfully', function(done) {
        //uncomment below and update the code to test sendPrompt
        //instance.sendPrompt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('streamSendPrompt', function() {
      it('should call streamSendPrompt successfully', function(done) {
        //uncomment below and update the code to test streamSendPrompt
        //instance.streamSendPrompt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePrompt', function() {
      it('should call updatePrompt successfully', function(done) {
        //uncomment below and update the code to test updatePrompt
        //instance.updatePrompt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
