/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.freechat-sdk);
  }
}(this, function(expect, freechat-sdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new freechat-sdk.CharacterBackendDetailsDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CharacterBackendDetailsDTO', function() {
    it('should create an instance of CharacterBackendDetailsDTO', function() {
      // uncomment below and update the code to test CharacterBackendDetailsDTO
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be.a(freechat-sdk.CharacterBackendDetailsDTO);
    });

    it('should have the property requestId (base name: "requestId")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property backendId (base name: "backendId")', function() {
      // uncomment below and update the code to test the property backendId
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property gmtCreate (base name: "gmtCreate")', function() {
      // uncomment below and update the code to test the property gmtCreate
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property gmtModified (base name: "gmtModified")', function() {
      // uncomment below and update the code to test the property gmtModified
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property characterId (base name: "characterId")', function() {
      // uncomment below and update the code to test the property characterId
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property isDefault (base name: "isDefault")', function() {
      // uncomment below and update the code to test the property isDefault
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property greetingPromptTaskId (base name: "greetingPromptTaskId")', function() {
      // uncomment below and update the code to test the property greetingPromptTaskId
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property experiencePromptTaskId (base name: "experiencePromptTaskId")', function() {
      // uncomment below and update the code to test the property experiencePromptTaskId
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property messageWindowSize (base name: "messageWindowSize")', function() {
      // uncomment below and update the code to test the property messageWindowSize
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

    it('should have the property forwardToUser (base name: "forwardToUser")', function() {
      // uncomment below and update the code to test the property forwardToUser
      //var instance = new freechat-sdk.CharacterBackendDetailsDTO();
      //expect(instance).to.be();
    });

  });

}));
