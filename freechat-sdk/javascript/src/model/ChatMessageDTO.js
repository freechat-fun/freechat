/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChatToolCallDTO from './ChatToolCallDTO';

/**
 * The ChatMessageDTO model module.
 * @module model/ChatMessageDTO
 * @version 0.1.0
 */
class ChatMessageDTO {
    /**
     * Constructs a new <code>ChatMessageDTO</code>.
     * Chat message
     * @alias module:model/ChatMessageDTO
     */
    constructor() { 
        
        ChatMessageDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChatMessageDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatMessageDTO} obj Optional instance to populate.
     * @return {module:model/ChatMessageDTO} The populated <code>ChatMessageDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatMessageDTO();

            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('toolCall')) {
                obj['toolCall'] = ChatToolCallDTO.constructFromObject(data['toolCall']);
            }
            if (data.hasOwnProperty('gmtCreate')) {
                obj['gmtCreate'] = ApiClient.convertToType(data['gmtCreate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatMessageDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatMessageDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // validate the optional field `toolCall`
        if (data['toolCall']) { // data not null
          ChatToolCallDTO.validateJSON(data['toolCall']);
        }

        return true;
    }


}



/**
 * Chat role: system | assistant | user | function_call | function_result
 * @member {String} role
 */
ChatMessageDTO.prototype['role'] = undefined;

/**
 * user: Name of the user role; function_call: Name of the called tool
 * @member {String} name
 */
ChatMessageDTO.prototype['name'] = undefined;

/**
 * default: Dialogue content; function_result: function call result, serialized as json
 * @member {String} content
 */
ChatMessageDTO.prototype['content'] = undefined;

/**
 * @member {module:model/ChatToolCallDTO} toolCall
 */
ChatMessageDTO.prototype['toolCall'] = undefined;

/**
 * Creation time
 * @member {Date} gmtCreate
 */
ChatMessageDTO.prototype['gmtCreate'] = undefined;






export default ChatMessageDTO;

