/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AiApiKeyCreateDTO model module.
 * @module model/AiApiKeyCreateDTO
 * @version 0.1.0
 */
class AiApiKeyCreateDTO {
    /**
     * Constructs a new <code>AiApiKeyCreateDTO</code>.
     * Request data for adding new model credential information
     * @alias module:model/AiApiKeyCreateDTO
     * @param name {String} Credential name
     * @param provider {String} Model provider: hugging_face | open_ai | local_ai | in_process | dash_scope | unknown
     * @param token {String} Credential content
     */
    constructor(name, provider, token) { 
        
        AiApiKeyCreateDTO.initialize(this, name, provider, token);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, provider, token) { 
        obj['name'] = name;
        obj['provider'] = provider;
        obj['token'] = token;
    }

    /**
     * Constructs a <code>AiApiKeyCreateDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AiApiKeyCreateDTO} obj Optional instance to populate.
     * @return {module:model/AiApiKeyCreateDTO} The populated <code>AiApiKeyCreateDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AiApiKeyCreateDTO();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AiApiKeyCreateDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AiApiKeyCreateDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AiApiKeyCreateDTO.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }

        return true;
    }


}

AiApiKeyCreateDTO.RequiredProperties = ["name", "provider", "token"];

/**
 * Credential name
 * @member {String} name
 */
AiApiKeyCreateDTO.prototype['name'] = undefined;

/**
 * Model provider: hugging_face | open_ai | local_ai | in_process | dash_scope | unknown
 * @member {String} provider
 */
AiApiKeyCreateDTO.prototype['provider'] = undefined;

/**
 * Credential content
 * @member {String} token
 */
AiApiKeyCreateDTO.prototype['token'] = undefined;

/**
 * Whether to enable (enabled by default)
 * @member {Boolean} enabled
 */
AiApiKeyCreateDTO.prototype['enabled'] = undefined;






export default AiApiKeyCreateDTO;

