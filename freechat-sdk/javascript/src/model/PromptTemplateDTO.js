/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChatPromptContentDTO from './ChatPromptContentDTO';

/**
 * The PromptTemplateDTO model module.
 * @module model/PromptTemplateDTO
 * @version 0.1.0
 */
class PromptTemplateDTO {
    /**
     * Constructs a new <code>PromptTemplateDTO</code>.
     * Prompt template content
     * @alias module:model/PromptTemplateDTO
     */
    constructor() { 
        
        PromptTemplateDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PromptTemplateDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PromptTemplateDTO} obj Optional instance to populate.
     * @return {module:model/PromptTemplateDTO} The populated <code>PromptTemplateDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PromptTemplateDTO();

            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiClient.convertToType(data['template'], 'String');
            }
            if (data.hasOwnProperty('chatTemplate')) {
                obj['chatTemplate'] = ChatPromptContentDTO.constructFromObject(data['chatTemplate']);
            }
            if (data.hasOwnProperty('variables')) {
                obj['variables'] = ApiClient.convertToType(data['variables'], {'String': Object});
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PromptTemplateDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PromptTemplateDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['template'] && !(typeof data['template'] === 'string' || data['template'] instanceof String)) {
            throw new Error("Expected the field `template` to be a primitive type in the JSON string but got " + data['template']);
        }
        // validate the optional field `chatTemplate`
        if (data['chatTemplate']) { // data not null
          ChatPromptContentDTO.validateJSON(data['chatTemplate']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }

        return true;
    }


}



/**
 * Prompt text template content, choose one between this and chatTemplate field, priority: template > chatTemplate
 * @member {String} template
 */
PromptTemplateDTO.prototype['template'] = undefined;

/**
 * @member {module:model/ChatPromptContentDTO} chatTemplate
 */
PromptTemplateDTO.prototype['chatTemplate'] = undefined;

/**
 * Variables applied to the template, can be empty
 * @member {Object.<String, Object>} variables
 */
PromptTemplateDTO.prototype['variables'] = undefined;

/**
 * Prompt format: mustache (default) | f_string
 * @member {String} format
 */
PromptTemplateDTO.prototype['format'] = undefined;






export default PromptTemplateDTO;

