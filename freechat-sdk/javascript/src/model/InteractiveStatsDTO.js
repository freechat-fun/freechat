/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InteractiveStatsDTO model module.
 * @module model/InteractiveStatsDTO
 * @version 0.1.0
 */
class InteractiveStatsDTO {
    /**
     * Constructs a new <code>InteractiveStatsDTO</code>.
     * Interactive statistics information
     * @alias module:model/InteractiveStatsDTO
     */
    constructor() { 
        
        InteractiveStatsDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InteractiveStatsDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InteractiveStatsDTO} obj Optional instance to populate.
     * @return {module:model/InteractiveStatsDTO} The populated <code>InteractiveStatsDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InteractiveStatsDTO();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('gmtCreate')) {
                obj['gmtCreate'] = ApiClient.convertToType(data['gmtCreate'], 'Date');
            }
            if (data.hasOwnProperty('gmtModified')) {
                obj['gmtModified'] = ApiClient.convertToType(data['gmtModified'], 'Date');
            }
            if (data.hasOwnProperty('referType')) {
                obj['referType'] = ApiClient.convertToType(data['referType'], 'String');
            }
            if (data.hasOwnProperty('referId')) {
                obj['referId'] = ApiClient.convertToType(data['referId'], 'String');
            }
            if (data.hasOwnProperty('viewCount')) {
                obj['viewCount'] = ApiClient.convertToType(data['viewCount'], 'Number');
            }
            if (data.hasOwnProperty('referCount')) {
                obj['referCount'] = ApiClient.convertToType(data['referCount'], 'Number');
            }
            if (data.hasOwnProperty('recommendCount')) {
                obj['recommendCount'] = ApiClient.convertToType(data['recommendCount'], 'Number');
            }
            if (data.hasOwnProperty('scoreCount')) {
                obj['scoreCount'] = ApiClient.convertToType(data['scoreCount'], 'Number');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InteractiveStatsDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InteractiveStatsDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['referType'] && !(typeof data['referType'] === 'string' || data['referType'] instanceof String)) {
            throw new Error("Expected the field `referType` to be a primitive type in the JSON string but got " + data['referType']);
        }
        // ensure the json data is a string
        if (data['referId'] && !(typeof data['referId'] === 'string' || data['referId'] instanceof String)) {
            throw new Error("Expected the field `referId` to be a primitive type in the JSON string but got " + data['referId']);
        }

        return true;
    }


}



/**
 * Request identifier
 * @member {String} requestId
 */
InteractiveStatsDTO.prototype['requestId'] = undefined;

/**
 * Creation time
 * @member {Date} gmtCreate
 */
InteractiveStatsDTO.prototype['gmtCreate'] = undefined;

/**
 * Modification time
 * @member {Date} gmtModified
 */
InteractiveStatsDTO.prototype['gmtModified'] = undefined;

/**
 * Resource type
 * @member {String} referType
 */
InteractiveStatsDTO.prototype['referType'] = undefined;

/**
 * Resource identifier
 * @member {String} referId
 */
InteractiveStatsDTO.prototype['referId'] = undefined;

/**
 * View count
 * @member {Number} viewCount
 */
InteractiveStatsDTO.prototype['viewCount'] = undefined;

/**
 * Reference count
 * @member {Number} referCount
 */
InteractiveStatsDTO.prototype['referCount'] = undefined;

/**
 * Recommendation count
 * @member {Number} recommendCount
 */
InteractiveStatsDTO.prototype['recommendCount'] = undefined;

/**
 * Score count
 * @member {Number} scoreCount
 */
InteractiveStatsDTO.prototype['scoreCount'] = undefined;

/**
 * Average score
 * @member {Number} score
 */
InteractiveStatsDTO.prototype['score'] = undefined;






export default InteractiveStatsDTO;

