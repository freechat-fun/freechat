/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChatMessageDTO from './ChatMessageDTO';

/**
 * The ChatPromptContentDTO model module.
 * @module model/ChatPromptContentDTO
 * @version 0.1.0
 */
class ChatPromptContentDTO {
    /**
     * Constructs a new <code>ChatPromptContentDTO</code>.
     * Prompt chat template content
     * @alias module:model/ChatPromptContentDTO
     */
    constructor() { 
        
        ChatPromptContentDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChatPromptContentDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatPromptContentDTO} obj Optional instance to populate.
     * @return {module:model/ChatPromptContentDTO} The populated <code>ChatPromptContentDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatPromptContentDTO();

            if (data.hasOwnProperty('system')) {
                obj['system'] = ApiClient.convertToType(data['system'], 'String');
            }
            if (data.hasOwnProperty('messagesToSend')) {
                obj['messagesToSend'] = ChatMessageDTO.constructFromObject(data['messagesToSend']);
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [ChatMessageDTO]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatPromptContentDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatPromptContentDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['system'] && !(typeof data['system'] === 'string' || data['system'] instanceof String)) {
            throw new Error("Expected the field `system` to be a primitive type in the JSON string but got " + data['system']);
        }
        // validate the optional field `messagesToSend`
        if (data['messagesToSend']) { // data not null
          ChatMessageDTO.validateJSON(data['messagesToSend']);
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                ChatMessageDTO.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Prompt system template
 * @member {String} system
 */
ChatPromptContentDTO.prototype['system'] = undefined;

/**
 * @member {module:model/ChatMessageDTO} messagesToSend
 */
ChatPromptContentDTO.prototype['messagesToSend'] = undefined;

/**
 * Pre-set chat messages in the Prompt
 * @member {Array.<module:model/ChatMessageDTO>} messages
 */
ChatPromptContentDTO.prototype['messages'] = undefined;






export default ChatPromptContentDTO;

