/**
 * FreeChat OpenAPI Definition
 * https://github.com/freechat-fun/freechat
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InteractiveStatsDTO from './InteractiveStatsDTO';

/**
 * The PromptItemForNameDTO model module.
 * @module model/PromptItemForNameDTO
 * @version 0.1.0
 */
class PromptItemForNameDTO {
    /**
     * Constructs a new <code>PromptItemForNameDTO</code>.
     * Prompt identifier and version information
     * @alias module:model/PromptItemForNameDTO
     */
    constructor() { 
        
        PromptItemForNameDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PromptItemForNameDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PromptItemForNameDTO} obj Optional instance to populate.
     * @return {module:model/PromptItemForNameDTO} The populated <code>PromptItemForNameDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PromptItemForNameDTO();

            if (data.hasOwnProperty('promptId')) {
                obj['promptId'] = ApiClient.convertToType(data['promptId'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = InteractiveStatsDTO.constructFromObject(data['stats']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PromptItemForNameDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PromptItemForNameDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['promptId'] && !(typeof data['promptId'] === 'string' || data['promptId'] instanceof String)) {
            throw new Error("Expected the field `promptId` to be a primitive type in the JSON string but got " + data['promptId']);
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          InteractiveStatsDTO.validateJSON(data['stats']);
        }

        return true;
    }


}



/**
 * promptId
 * @member {String} promptId
 */
PromptItemForNameDTO.prototype['promptId'] = undefined;

/**
 * version
 * @member {Number} version
 */
PromptItemForNameDTO.prototype['version'] = undefined;

/**
 * @member {module:model/InteractiveStatsDTO} stats
 */
PromptItemForNameDTO.prototype['stats'] = undefined;






export default PromptItemForNameDTO;

